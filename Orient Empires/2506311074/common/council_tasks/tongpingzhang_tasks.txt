task_tongpingzhang_1 = { #处理国内事务
	default_task = yes
	position = councillor_tongpingzhang

	asset = {
		icon = "gfx/interface/icons/council_task_types/task_tongpingzhang_1.dds"
		background = "gfx/interface/buttons/button_round_bg.dds"
		frame = "gfx/interface/buttons/button_round_frame.dds"
		glow = "gfx/particles/halo.dds"
	}

	task_type = task_type_general
	task_progress = task_progress_infinite

	effect_desc = {
		# Direct Vassal Opinion
		desc = task_domestic_affairs_direct_effect_desc
		triggered_desc = {
			trigger = {
				liege = { has_perk = chains_of_loyalty_perk }
			}
			desc = task_domestic_affairs_chains_of_loyalty_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			desc = task_domestic_affairs_bureaucrats_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_family_business_bonus = yes
			}
			desc = task_domestic_affairs_family_business_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			desc = task_domestic_affairs_consulted_house_bonus_desc
		}
		# Parochial Vassal Opinion
		desc = task_domestic_affairs_parochial_effect_desc
		triggered_desc = {
			trigger = {
				liege = { has_perk = chains_of_loyalty_perk }
			}
			desc = task_domestic_affairs_chains_of_loyalty_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			desc = task_domestic_affairs_bureaucrats_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_family_business_bonus = yes
			}
			desc = task_domestic_affairs_family_business_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			desc = task_domestic_affairs_consulted_house_bonus_desc
		}
		# Tyranny Loss
		desc = task_domestic_affairs_tyranny_effect_desc
		triggered_desc = {
			trigger = {
				liege = { has_perk = chains_of_loyalty_perk }
			}
			desc = task_domestic_affairs_tyranny_chains_of_loyalty_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			desc = task_domestic_affairs_tyranny_bureaucrats_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_family_business_bonus = yes
			}
			desc = task_domestic_affairs_tyranny_family_business_bonus_desc
		}
		triggered_desc = {
			trigger = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			desc = task_domestic_affairs_tyranny_consulted_house_bonus_desc
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
				}
				desc = task_increase_control_improved_vassal_opinion
			}
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
					liege = {
						any_vassal = {
							government_has_flag = government_is_feudal
							primary_title.tier > tier_barony
						}
					}
				}
				desc = task_increase_control_improve_vassal_contract
			}
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
				}
				desc = task_increase_control_end_internal_war
			}
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
				}
				desc = task_increase_control_force_vassal_partition
			}
			triggered_desc = {
				trigger = {
					diplomacy < high_skill_rating
				}
				desc = task_increase_control_lose_vassal_opinion
			}
			triggered_desc = {
				trigger = {
					diplomacy < high_skill_rating
					liege = {
						any_vassal = {
							government_has_flag = government_is_feudal
							primary_title.tier > tier_barony
						}
					}
				}
				desc = task_increase_control_worsen_contract
			}
		}
	}

	on_start_task = {
		liege = {
			set_variable = {
				name = chancellor_domestic_affairs_opinion_value
				value = 0
			}
		}
	}

	on_cancel_task = {
		if = {
			limit = {
				is_alive = yes
				has_variable = chancellor_domestic_affairs_opinion_value
			}
			remove_variable = chancellor_domestic_affairs_opinion_value
		}
	}

	council_owner_modifier = {
		name = task_domestic_affairs_opinion_modifier
		direct_vassal_opinion = 1
		scale = chancellor_domestic_affairs_opinion_scale
	}

	council_owner_modifier = {
		name = task_domestic_affairs_parochial_opinion_modifier
		parochial_opinion = 1
		scale = chancellor_domestic_affairs_opinion_scale
	}

	council_owner_modifier = {
		name = task_domestic_affairs_opinion_modifier
		tyranny_loss_mult = 0.01
		scale = chancellor_domestic_affairs_tyranny_total
	}

	monthly_on_action = task_domestic_affairs_side_effects

	on_monthly = {
		if = {
			limit = {
				liege = { is_ai = no }
			}
			if = {
				limit = {
					liege = { 
						has_variable = chancellor_domestic_affairs_opinion_value 
					}
				}
				liege = {
					if = {
						limit = {
							var:chancellor_domestic_affairs_opinion_value < root.chancellor_domestic_affairs_opinion_max
						}
						change_variable = {
							name = chancellor_domestic_affairs_opinion_value
							add = root.chancellor_domestic_affairs_monthly_increase
						}
					}
					if = {
						limit = {
							var:chancellor_domestic_affairs_opinion_value > root.chancellor_domestic_affairs_opinion_max
						}
						set_variable = {
							name = chancellor_domestic_affairs_opinion_value
							value = root.chancellor_domestic_affairs_opinion_max
						}
					}
				}	
			}
			else = {
				liege = {
					set_variable = {
						name = chancellor_domestic_affairs_opinion_value
						value = 0
					}
				}
			}
		}
	}

	ai_will_do = {
		value = 0
		if = { # Do this if you have a faction against you, every little bit helps
			limit = {
				scope:councillor_liege = {
					any_targeting_faction = {
						OR = {
							faction_is_type = independence_faction
							faction_is_type = nation_fracturing_faction
							faction_is_type = liberty_faction
							faction_is_type = claimant_faction
						}
					}
				}
			}
			add = 1000
		}
		if = { # Get rid of tyranny
			limit = {
				scope:councillor_liege = {
					OR = {
						AND = { # Somewhat rational characters prefer this over the prestige of foreign affairs
							ai_rationality > -25
							NOT = { has_trait = arrogant }
							tyranny >= 5
						}
						AND = { # If you're arrogant or deeply irrational, it'll take a long time for you to realize
							OR = {
								ai_rationality <= -25
								has_trait = arrogant
							}
							tyranny >= 15
						}
					}
				}
			}
			add = 500
		}
	}
}

task_tongpingzhang_2 = { #推广文化
	position = councillor_tongpingzhang

	asset = {
		icon = "gfx/interface/icons/council_task_types/task_tongpingzhang_2.dds"
		background = "gfx/interface/buttons/button_round_bg.dds"
		frame = "gfx/interface/buttons/button_round_frame.dds"
		glow = "gfx/particles/halo.dds"
	}

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_percentage
	restart_on_finish = yes
	highlight_own_realm = yes
	
	effect_desc = {
		desc = {
			desc = task_promote_culture_effect_desc
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						any_vassal = {
							has_vassal_stance = minority
						}
					}
				}
				desc = minority_disapproves_conversion_tooltip
			}
			triggered_desc = {
				trigger = {
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { culture = scope:councillor_liege.culture }
						}
						NOT = {
							scope:councillor_liege.culture = {
								is_hybrid_culture = yes
								any_parent_culture = {
									this = scope:county.culture
								}
							}
						}
					}
					trigger_else = { always = no }
				}
				desc = task_promote_culture_acceptance_effect_desc
			}
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_improve_county_opinion
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_taxes
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_levies
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_settlers
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_administration
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = steward_promote_culture_base
			desc = STEWARD_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.steward_promote_culture_monthly_increase
			desc = SCALED_COUNCILLOR_STEWARDSHIP_VALUE
		}

		add = steward_promote_culture_contextual_bonuses
		
		if = { # Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.promote_culture_development_penalty
				desc = STEWARD_PROMOTE_CULTURE_DEVELOPMENT_PENALTY
			}
		}
		
		# Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slower_culture_conversion_speed
			}
			multiply = {
				value = slower_game_rule_value
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_slower_culture_conversion_speed
			}
			multiply = {
				value = significantly_slower_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_faster_culture_conversion_speed
			}
			multiply = {
				value = significantly_faster_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_FASTER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = faster_culture_conversion_speed
			}
			multiply = {
				value = faster_game_rule_value
				desc = GAME_RULE_FASTER_REASON
			}
		}
		# Faster conversion for FP2 Hostility ending, if county is in Iberia and culture was involved
		if = {
			limit = {
				any_in_global_list = {
					variable = fp2_struggle_ending_culture_list
					this = scope:county.culture
				}
				scope:county.title_province = { geographical_region = world_europe_west_iberia }
				scope:councillor.liege.house = {
					OR = {
						has_house_modifier = fp2_struggle_hostility_house_culture_modifier
						has_house_modifier = fp2_struggle_hostility_house_combined_modifier
					}
				}
			}
			multiply = {
				value = fp2_struggle_hostility_conversion_value
				desc = fp2_struggle_hostility_culture_conversion_task_desc
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = devoted_to_tradition_modifier
				}
			}
			multiply = {
				value = 1.25
				desc = bp2_devoted_to_tradition_modifier_conversion_task_desc
			}
		}

	}

	potential_county = {
		scope:county = {
			NOT = { culture = scope:councillor_liege.culture }
			trigger_if = {
				limit = {
					scope:councillor_liege = { has_variable = hold_court_8130_culture_block }
				}
				custom_tooltip = {
					text = hold_court_8130_conversion_tt
					NOT = { culture = scope:councillor_liege.var:hold_court_8130_culture_block }
				}
			}
		}
		trigger_if = {
			limit = {
				scope:councillor_liege = { is_ai = yes }
			}
			NAND = { # Princes in the HRE tend to not convert each other's cultures
				exists = title:e_hre.holder
				scope:councillor_liege.top_liege = title:e_hre.holder
				OR = {
					scope:councillor_liege.culture = culture:czech
					scope:councillor_liege.culture = { has_cultural_pillar = heritage_central_germanic }
				}
				OR = {
					scope:county.culture = culture:czech
					scope:county.culture = { has_cultural_pillar = heritage_central_germanic }
				}
			}
			OR = {
				NOT = {
					scope:county.culture = {
						cultural_acceptance = { target = scope:councillor_liege.culture value >= 50 }
					}
				}
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					NOT = { # Leave the Welsh alone!
						this = culture:anglo_saxon
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
				AND = {
					# Scottish rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:scottish
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:gaelic
						scope:county.culture = culture:cumbrian
						scope:county.culture = culture:pictish
					}
				}
				AND = {
					# English rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:english
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:norman
					}
				}
			}
			OR = {
				is_independent_ruler = yes
				scope:councillor_liege.primary_title.tier > tier_county
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
				AND = {
					# Scottish rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:scottish
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:gaelic
						scope:county.culture = culture:cumbrian
						scope:county.culture = culture:pictish
					}
				}
				AND = {
					# English rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:english
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:norman
					}
				}
			}
			OR = {
				scope:county = {
					any_neighboring_county = {
						culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
					}
				}
				
				AND = {
					NOT = {
						scope:county = {
							any_neighboring_county = {
								culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
							}
						}
					}
					OR = {
						#scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid cultures
						#	is_hybrid_culture = yes
						#	any_parent_culture = {
						#		this = scope:county.culture
						#	}
						#}
						# Unless they're a nomadic culture converting in the steppe or Asia Minor...
						#AND = { # Deprecated as of the Culture Update, nomadic cultures now try to hybridize aggressively
						#	OR = {
						#		scope:councillor_liege.culture = { has_cultural_pillar = heritage_mongolic }
						#		scope:councillor_liege.culture = { has_cultural_pillar = heritage_turkic }
						#	}
						#	scope:county.title_province = {
						#		OR = {
						#			geographical_region = world_asia_minor
						#			geographical_region = world_steppe
						#		}
						#	}
						#}
						AND = { # The English want to convert the Anglo Saxons and Cumbrians
							scope:councillor_liege.culture = culture:english
							OR = {
								scope:county.culture = culture:anglo_saxon
								scope:county.culture = culture:cumbrian
							}
						}
						AND = { # The Scots want to convert the Anglo Saxons, Cumbrians and Gaelic
							scope:councillor_liege.culture = culture:scottish
							OR = {
								scope:county.culture = culture:anglo_saxon
								scope:county.culture = culture:gaelic
								scope:county.culture = culture:cumbrian
								scope:county.culture = culture:pictish
							}
						}
						AND = { # The Gaels want to convert the Picts and Cumbrians
							scope:councillor_liege.culture = culture:gaelic
							OR = {
								scope:county.culture = culture:cumbrian
								scope:county.culture = culture:pictish
							}
						}
						AND = { # The modern scandinavians want to convert the Norse
							OR = {
								scope:councillor_liege.culture = culture:swedish
								scope:councillor_liege.culture = culture:danish
								scope:councillor_liege.culture = culture:norwegian
							}
							scope:county.culture = culture:norse
						}
						#AND = { # The vikings want to culture convert the Brits, OBSOLETE as of the Hybrid Culture update - they want to create hybrids instead!
						#	OR = {
						#		scope:councillor_liege.culture = culture:norse
						#		scope:councillor_liege.culture = culture:norwegian
						#	}
						#	scope:county = {
						#		any_county_province = {
						#			is_coastal = yes
						#		}
						#	}
						#	OR = {
						#		scope:county.culture = { has_cultural_pillar = heritage_west_germanic }
						#		scope:county.culture = { has_cultural_pillar = heritage_goidelic }
						#		scope:county.culture = { has_cultural_pillar = heritage_brythonic }
						#	}
						#}
						AND = { # The Portuguese should want to convert Suebi
							scope:councillor_liege.culture = culture:portuguese
							scope:county.culture = culture:suebi
						}
						AND = { # The Iberians want to convert Visigothic
							scope:councillor_liege.culture = { has_cultural_pillar = heritage_iberian }
							NOT = { scope:councillor_liege.culture = culture:portuguese }
							scope:county.culture = culture:visigothic
						}
					}
				}
			}
		}
	}

	on_finish_task_county = {
		scope:councillor_liege = {
			if = {
				limit = {	
					NOT = {
						culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				if = {
					limit = {
						is_independent_ruler = no
					}
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 60
					}
				}
				else = {
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 30
					}
				}
			}
		}
		scope:county = {
			if = {
				limit = {
					NOT = {
						scope:councillor_liege.culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				culture = {
					change_cultural_acceptance = {
						target = scope:councillor_liege.culture
						value = culture_conversion_acceptance_impact
						desc = cultural_acceptance_loss_promote_culture
					}
				}
			}
			set_county_culture = scope:councillor_liege.culture
		}
		scope:councillor = {
			start_default_task = yes
		}
	}

	monthly_on_action = task_promote_culture_side_effects

	ai_will_do = {
		value = 0
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_promote_culture
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = {
			limit = {
				scope:councillor_liege.culture = {
					has_innovation = innovation_desert_tactics #Best way to check if the culture is Outremer
				}
				scope:councillor_liege = {
					gold >= steward_convert_culture_value
				}
			}
			add = 500
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					OR = {
						gold >= steward_convert_culture_value
						AND = {
							gold > 0
							culture = {
								OR = {
									is_hybrid_culture = yes
									is_divergent_culture = yes
								}
							}
							any_realm_county = {
								culture = {
									save_temporary_scope_as = culture_check
									scope:councillor_liege.culture = {
										any_parent_culture = {
											this = scope:culture_check
										}
									}
								}
							}
						}
					}
				}
			}
			add = 200
		}
		if = {
			limit = {
				scope:councillor_liege = {
					culture = {
						OR = {
							is_hybrid_culture = yes
							is_divergent_culture = yes
						}
					}
					any_sub_realm_county = {
						culture = {
							save_temporary_scope_as = culture_check
							scope:councillor_liege.culture = {
								any_parent_culture = {
									this = scope:culture_check
								}
							}
						}
					}
				}
			}
			add = 200
		}
		# Motivate the AI with an escalation agenda to take this task
		if = {
			limit = {
				has_character_flag = agenda_towards_escalation
			}
			add = 500
		}
		else_if = {
			limit = {
				has_character_flag = agenda_towards_deescalation
			}
			add = -250
		}
		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = {
					has_character_flag = no_ai_culture_convert
					NAND = { # ignore it if in Hostility with escalation
						has_character_flag = agenda_towards_escalation
						any_character_struggle = {
							involvement = involved
							is_struggle_type = iberian_struggle
							is_struggle_phase = struggle_iberia_phase_hostility
						}
					}
				}
			}
			multiply = 0
		}
		if = {
			# Interrupt this task if you're bankrupt
			limit = {
				scope:councillor_liege = {
					gold < -50
				}
			}
			multiply = 0
		}
	}
}

task_tongpingzhang_3 = { #游说法理领土
	position = councillor_tongpingzhang

	asset = {
		icon = "gfx/interface/icons/council_task_types/task_tongpingzhang_3.dds"
		background = "gfx/interface/buttons/button_round_bg.dds"
		frame = "gfx/interface/buttons/button_round_frame.dds"
		glow = "gfx/particles/halo.dds"
	}

	task_type = task_type_county
	county_target = neighbor_land
	ai_county_target = neighbor_land
	task_progress = task_progress_percentage

	effect_desc = {
		desc = {
			desc = task_convince_dejure_effect_desc
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
				}
				desc = task_convince_dejure_gain_prestige
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
				}
				desc = task_convince_dejure_lose_prestige
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
				}
				desc = task_convince_dejure_diplomatic_blunder
			}
		}
	}

	is_shown = {
		has_dlc_feature = royal_court
	}

	progress = {
		value = 0
		add = {
			value = steward_convince_dejure_base
			desc = STEWARD_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.steward_convince_dejure_monthly_increase
			desc = SCALED_COUNCILLOR_STEWARDSHIP_VALUE
		}
		#CGV bonuses/maluses
		if = {
			limit = {
				scope:councillor_liege = {
					court_grandeur_current_level = 7
				}
			}
			add = {
				value = 0.1
				desc = steward_convince_dejure_cg_bonus_desc
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					court_grandeur_current_level = 8
				}
			}
			add = {
				value = 0.2
				desc = steward_convince_dejure_cg_bonus_desc
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					court_grandeur_current_level = 9
				}
			}
			add = {
				value = 0.3
				desc = steward_convince_dejure_cg_bonus_desc
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					court_grandeur_current_level = 10
				}
			}
			add = {
				value = 0.4
				desc = steward_convince_dejure_cg_bonus_desc
			}
		}
		if = {
			limit = {
				scope:county.holder.top_liege = {
					court_grandeur_current_level = 7
				}
			}
			add = {
				value = -0.1
				desc = steward_convince_dejure_cg_malus_desc
			}
		}
		if = {
			limit = {
				scope:county.holder.top_liege = {
					court_grandeur_current_level = 8
				}
			}
			add = {
				value = -0.2
				desc = steward_convince_dejure_cg_malus_desc
			}
		}
		if = {
			limit = {
				scope:county.holder.top_liege = {
					court_grandeur_current_level = 9
				}
			}
			add = {
				value = -0.3
				desc = steward_convince_dejure_cg_malus_desc
			}
		}
		if = {
			limit = {
				scope:county.holder.top_liege = {
					court_grandeur_current_level = 10
				}
			}
			add = {
				value = -0.4
				desc = steward_convince_dejure_cg_malus_desc
			}
		}
		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.steward_convince_dejure_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.steward_convince_dejure_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.steward_convince_dejure_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.steward_convince_dejure_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = steward_convince_dejure_erudition_bonus
				desc = ERUDITION_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = steward_convince_dejure_family_business_bonus
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			add = {
				value = steward_convince_dejure_consulted_house_bonus
				desc = CONSULTED_HOUSE_BONUS_VALUE
			}
		}
	}

	#Unlocked at Court Grandeur level 6
	is_valid_showing_failures_only = {
		scope:councillor_liege = {
			court_grandeur_current_level >= 6
		}
	}

	potential_county = {
		custom_tooltip = {
			text = steward_convince_dejure_potential_county_tt
			scope:councillor_liege = {
				any_held_title = {
					any_in_de_jure_hierarchy = {
						tier = tier_county
						NOT = {
							has_county_modifier = steward_de_jure_denied_modifier
						}
						this = scope:county
						holder = {
							NOT = {
								target_is_liege_or_above = scope:councillor_liege
							}
						}
					}
				}
			}
		}
		custom_tooltip = steward_convince_dejure_potential_county_tt_2
		trigger_if = {
			limit = {
				scope:councillor_liege = { is_ai = yes }
			}
			OR = {
				is_independent_ruler = yes
				scope:councillor_liege.primary_title.tier > tier_county
			}
			scope:county = {
				any_neighboring_county = {
					holder.top_liege = scope:councillor_liege # The AI only wants to convince counties bordering their own land
				}
			}
		}
	}

	on_finish_task_county = {
		scope:councillor = {
			start_default_task = yes
		}
		scope:councillor_liege = {
			if = {
				limit = {
					is_independent_ruler = no
				}
				add_character_flag = {
					flag = no_de_jure_convince
					years = 50
				}
			}
			else = {
				add_character_flag = {
					flag = no_de_jure_convince
					years = 20
				}
			}
		}
		scope:county.holder.top_liege = {
			trigger_event = steward_task.0001
		}
	}

	monthly_on_action = task_convince_dejure_side_effects
	
	ai_will_do = {
		value = 0
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_convince_dejure
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		# increase likelyhood with court grandeur level
		if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = court_grandeur_level_6
				}
			}
			add = 100
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = court_grandeur_level_7
				}
			}
			add = 150
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = court_grandeur_level_8
				}
			}
			add = 200
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = court_grandeur_level_9
				}
			}
			add = 250
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = court_grandeur_level_10
				}
			}
			add = 300
		}
		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = { has_character_flag = no_de_jure_convince }
			}
			multiply = 0
		}
	}
}

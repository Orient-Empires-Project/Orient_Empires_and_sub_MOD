
liberty_faction = {
	casus_belli = liberty_faction_war

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					faction_target = { government_has_flag = government_is_administrative }
				}
				desc = liberty_faction_desc_admin
			}
			triggered_desc = {
				trigger = {
					faction_target = { government_has_flag = government_is_tribal }
				}
				desc = liberty_faction_desc_tribal
			}
			triggered_desc = {
				trigger = {
					faction_target = { government_has_flag = government_is_feudal }
				}
				desc = liberty_faction_desc_feudal
			}
			desc = liberty_faction_desc
		}
	}

	short_effect_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					faction_target = { government_has_flag = government_is_administrative }
				}
				desc = liberty_faction_short_effect_desc_admin
			}
			triggered_desc = {
				trigger = {
					faction_target = { government_has_flag = government_is_tribal }
				}
				desc = liberty_faction_short_effect_desc_tribal
			}
			desc = liberty_faction_short_effect_desc
		}
	}

	sort_order = 4

	discontent_progress = {
		base = 0

		common_discontent_progress_modifier = yes
	}

	power_threshold = {
		base = 80

		modifier = {
			add = 20
			faction_target = {
				has_perk = hard_rule_perk
			}
			desc = "FACTION_POWER_HARD_RULE"
		}

		#Lower the threshold depending on the state of other factions
		dynamic_power_threshold_scripted_modifier = {
			FACTION_TYPE1 = claimant_faction
			FACTION_TYPE2 = independence_faction
			FACTION_TYPE3 = populist_faction
		}
	}

	demand = {
		save_scope_as = faction

		faction_leader = {
			save_scope_as = faction_leader
		}

		faction_target = {
			save_scope_as = faction_target
		}

		# Let the human players in the faction know that the demand will be sent
		every_faction_member = {
			limit = {
				is_ai = no
				NOT = { this = scope:faction.faction_leader }
			}
			trigger_event = faction_demand.0105
		}

		# Send the actual demand in 5 days
		faction_target = {
			trigger_event = {
				id = faction_demand.0101
				days = 5
			}
		}
	}

	ai_demand_chance = {
		base = 0

		# 30% base chance at minimum power (80%), increasing linearly
		compare_modifier = {
			value = faction_power
			multiplier = 0.375
		}

		# Once the faction has a good chance to win (10% stronger than liege) demand chance increases much more rapidly.
		compare_modifier = {
			trigger = {	faction_power > 110 }
			value = faction_power
			multiplier = 0.75
		}

		# Less likely if already in a war with an external ruler - the Liberty Faction is pretty sporting
		modifier = {
			add = -75
			faction_target = {
				any_war_enemy = {
					NOT = {
						target_is_liege_or_above = root.faction_target
					}
				}
			}
		}

		modifier = {
			add = -1000
			faction_target = {
				involved_activity ?= {
					has_activity_type = activity_coronation
					activity_host = prev
				}
			}
		}
	}

	on_war_start = {
		every_faction_member = {
			limit = {
				has_variable = gathered_support_for_faction
				var:gathered_support_for_faction = root
			}
			spawn_army = {
				name = gathered_support_for_faction_army
				levies = {
					value = this.massive_influence_value
					multiply = 3
				}
				men_at_arms = {
					type = light_footmen
					stacks = 2
				}
				location = this.location
				war = root.faction_war
				inheritable = yes
			}
		}
	}

	is_character_valid = {
		common_character_validity_trigger = {
			FACTION_TARGET = scope:faction.faction_target
		}
		has_valid_faction_members_trigger = yes
	}

	can_character_create_ui = {
		base_faction_trigger = { FACTION_TYPE = liberty_faction }

		common_can_character_create_trigger = {
			FACTION_TARGET = scope:target
		}

		trigger_if = {
			limit = { scope:target = { realm_law_use_imperial_bureaucracy = yes } }
			custom_description = {
				text = has_lowest_imperial_bureaucracy
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = imperial_bureaucracy_1
						has_realm_law = imperial_bureaucracy_2
						has_realm_law = imperial_bureaucracy_3
					}
				}
			}
		}
		trigger_else_if = {
			limit = { scope:target = { realm_law_use_celestial_bureaucracy = yes } }
			custom_description = {
				text = has_lowest_imperial_bureaucracy
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = celestial_bureaucracy_1
						has_realm_law = celestial_bureaucracy_2
						has_realm_law = celestial_bureaucracy_3
					}
				}
			}
		}
		trigger_else_if = {
			limit = { scope:target = { government_has_flag = government_is_tribal } }
			custom_description = {
				text = has_lowest_tribal_authority
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = tribal_authority_1
						has_realm_law = tribal_authority_2
						has_realm_law = tribal_authority_3
					}
				}
			}
		}
		trigger_else = {
			custom_description = {
				text = has_lowest_crown_authority
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = crown_authority_1
						has_realm_law = crown_authority_2
						has_realm_law = crown_authority_3
					}
				}
			}
		}
		
		trigger_if = {
			limit = {
				scope:target = { government_has_flag = government_is_administrative }
			}
			scope:target = {
				is_independent_ruler = yes
			}
		}
	}

	can_character_create = {
		common_can_character_create_trigger = {
			FACTION_TARGET = scope:target
		}

		trigger_if = {
			limit = { scope:target = { realm_law_use_imperial_bureaucracy = yes} }
			custom_description = {
				text = has_lowest_imperial_bureaucracy
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = imperial_bureaucracy_1
						has_realm_law = imperial_bureaucracy_2
						has_realm_law = imperial_bureaucracy_3
					}
				}
			}
		}
		trigger_else_if = {
			limit = { scope:target = { realm_law_use_celestial_bureaucracy = yes } }
			custom_description = {
				text = has_lowest_imperial_bureaucracy
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = celestial_bureaucracy_1
						has_realm_law = celestial_bureaucracy_2
						has_realm_law = celestial_bureaucracy_3
					}
				}
			}
		}
		trigger_else_if = {
			limit = { scope:target = { government_has_flag = government_is_tribal } }
			custom_description = {
				text = has_lowest_tribal_authority
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = tribal_authority_1
						has_realm_law = tribal_authority_2
						has_realm_law = tribal_authority_3
					}
				}
			}
		}
		trigger_else = {
			custom_description = {
				text = has_lowest_crown_authority
				subject = scope:target
				scope:target = {
					OR = {
						has_realm_law = crown_authority_1
						has_realm_law = crown_authority_2
						has_realm_law = crown_authority_3
					}
				}
			}
		}
		
		trigger_if = {
			limit = {
				scope:target = { government_has_flag = government_is_administrative }
			}
			scope:target = {
				is_independent_ruler = yes
			}
		}
	}

	can_character_join = {
		common_can_character_join_trigger = {
			FACTION_TARGET = scope:faction.faction_target
		}
		OR = {
			is_ai = no
			scope:faction.faction_target = {
				trigger_if = {
					limit = { realm_law_use_imperial_bureaucracy = yes }
					OR = {
						has_realm_law = imperial_bureaucracy_1
						has_realm_law = imperial_bureaucracy_2
						has_realm_law = imperial_bureaucracy_3
					}
				}
				trigger_else_if = {
					limit = { realm_law_use_celestial_bureaucracy = yes }
					custom_description = {
						text = has_lowest_imperial_bureaucracy
						subject = scope:target
						OR = {
							has_realm_law = celestial_bureaucracy_1
							has_realm_law = celestial_bureaucracy_2
							has_realm_law = celestial_bureaucracy_3
						}
					}
				}
				trigger_else_if = {
					limit = { government_has_flag = government_is_tribal }
					OR = {
						has_realm_law = tribal_authority_1
						has_realm_law = tribal_authority_2
						has_realm_law = tribal_authority_3
					}
				}
				trigger_else = {
					OR = {
						has_realm_law = crown_authority_1
						has_realm_law = crown_authority_2
						has_realm_law = crown_authority_3
					}
				}
			}
		}
		
		trigger_if = {
			limit = {
				scope:faction.faction_target = { government_has_flag = government_is_administrative }
			}
			scope:faction.faction_target = {
				is_independent_ruler = yes
			}
		}
	}

	ai_create_score = {
		base = 0 # Join Weight is set primarily based on what Crown Laws a realm has.

		############
		# BLOCKERS #
		############
		common_create_faction_blockers = {
			FACTION_TARGET = scope:target
			FLAG = recent_liberty_faction_war
		}

		#######################
		# Standard AI Weights #
		#
		# Modifiers for Liberty Factions are inherently small.
		# This is because Liberty is the 'Default Faction' that vassals are join if they don't want/can't join any other faction.
		# 'Base Join Weight' depends on the current Crown Authority level.
		common_faction_modifiers = {
			FACTION_TARGET = scope:target
			OPINION_MULTIPLIER = -1
			MAX_OPINION = 0
			POWER = 0
			THRESHOLD = 80
		}

		liberty_faction_modifiers = {
			FACTION_TARGET = scope:target
		}
		#House Hostility from Armenian tradition
	    modifier = {
			desc = "FACTION_REASON_HOUSE_HOSTILITY"

			scope:target.house ?= {
				NOT = { this = root.house }
			}
			culture = { has_cultural_parameter = house_hostility_more_common }

			factor = 1.25
	    }		
	}

	ai_join_score = {
		base = 0 # Join Weight is set primarily based on what Crown Laws a realm has.

		############
		# BLOCKERS #
		common_join_faction_blockers = {
			FACTION_TARGET = scope:faction.faction_target
		}
		
		#######################
		# Standard AI Weights #
		#AI
		# Modifiers for Liberty Factions are inherently small.
		# This is because Liberty is the 'Default Faction' that vassals are join if they don't want/can't join any other faction.
		common_faction_modifiers = {
			FACTION_TARGET = scope:faction.faction_target
			OPINION_MULTIPLIER = -1
			MAX_OPINION = 0
			POWER = scope:faction.faction_power
			THRESHOLD = scope:faction.faction_power_threshold
		}

		liberty_faction_modifiers = {
			FACTION_TARGET = scope:faction.faction_target
		}

		struggle_faction_modifiers = yes

		#House Hostility from Armenian tradition
	    modifier = {
			desc = "FACTION_REASON_HOUSE_HOSTILITY"

			scope:faction.faction_target.house ?= {
				NOT = { this = root.house }
			}
			culture = { has_cultural_parameter = house_hostility_more_common }

			factor = 1.25
	    }
		#EP3 admin legitimacy event
		modifier = {
			desc = "FACTION_REASON_LOW_LEGITIMACY_CHALLENGER"
			add = 25
			scope:faction = {
				any_faction_member = {
					has_character_flag = low_legitimacy_admin_factions_flag
				}
			}
		}
	}

	on_creation = {
		save_scope_as = faction
		if = {
			limit = {
				any_player = {
					is_landless_adventurer = yes
					is_within_diplo_range = { CHARACTER = scope:faction.faction_target }
					OR = {
						has_contact = scope:faction.faction_leader
						NOT = { has_contact = scope:faction.faction_target }
					}
					any_character_task_contract = {
						has_task_contract_type = laamp_join_faction_contract
						count <= 3
					}
					can_create_task_contract = {
						type_name = laamp_join_faction_contract
						employer = scope:faction.faction_leader
					}
					save_temporary_scope_as = player_laamp
				}
			}
			scope:player_laamp = {
				create_task_contract = {
					task_contract_type = laamp_join_faction_contract
					task_contract_tier = scope:faction.faction_leader.task_contract_tier_value
					location = scope:faction.faction_leader.primary_title.title_province
					task_contract_employer = scope:faction.faction_leader
					target = scope:faction.faction_target
				}
			}
		}
	}

	county_allow_join = no
	county_allow_create = no
}


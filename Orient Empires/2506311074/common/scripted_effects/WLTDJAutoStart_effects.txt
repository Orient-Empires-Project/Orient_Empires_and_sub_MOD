############# WLTDJAutoStart_effects
# by 往来天地间 WangLaiTianDiJian
# WLTDJAutoStart

# WLTDJ20220730
# Saltfish edited 20250911
WLTDJAutoStart_fill_duchy_ruler_function_effect = {
	if = {
		limit = {
			current_date >= $START_DATE$
			current_date < $END_DATE$
		}
		every_duchy = {
			limit = {
				NOT = { exists = holder }
				is_titular = no
				title_capital_county.holder = { is_independent_ruler = yes }
				$WLTDJAutoStart_fill_duchy_region_and_title_trigger$ = yes
			}
			save_temporary_scope_as = temp_title
			title_capital_county.holder = {
				save_temporary_scope_as = temp_ruler
			}

			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change_1
				add_claim_on_loss = no
			}
			change_title_holder = {
				holder = scope:temp_ruler
				change = scope:change_1
			}
			resolve_title_and_vassal_change = scope:change_1

			every_in_de_jure_hierarchy = {
				limit = {
					NOT = { holder = scope:temp_ruler }
					tier = tier_county
					holder = {
						is_independent_ruler = yes
						primary_title.tier = tier_county
					}
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change_2
					add_claim_on_loss = no
				}
				change_title_holder = {
					holder = scope:temp_ruler
					change = scope:change_2
				}
				resolve_title_and_vassal_change = scope:change_2
			}
		}
	}
}

WLTDJAutoStart_fill_kingdom_ruler_function_effect = {
	# 若该王国头衔的法理帝国存在持有者，则此调整不生效（不论该帝国是否持有该王国的所有法理公爵领）
	if = {
		limit = {
			current_date >= $START_DATE$
			current_date < $END_DATE$
		}
		every_kingdom = {
			limit = {
				NOR = {
					exists = holder
					is_titular = yes
					de_jure_liege = { exists = holder }
				}
				$WLTDJAutoStart_fill_kingdom_region_and_title_trigger$ = yes
			}

			WLTDJAutoStart_fill_kingdom_or_empire_ruler_function_effect = yes
		}
	}
}

WLTDJAutoStart_fill_empire_ruler_function_effect = {
	if = {
		limit = {
			current_date >= $START_DATE$
			current_date < $END_DATE$
		}
		every_empire = {
			limit = {
				NOR = {
					exists = holder
					is_titular = yes
				}
				$WLTDJAutoStart_fill_empire_region_and_title_trigger$ = yes
			}

			WLTDJAutoStart_fill_kingdom_or_empire_ruler_function_effect = yes
		}
	}
}



WLTDJAutoStart_fill_kingdom_or_empire_ruler_function_effect = {
	save_temporary_scope_as = temp_title
	title_capital_county.holder = {
		save_temporary_scope_as = temp_ruler
	}

	create_title_and_vassal_change = {
		type = created
		save_scope_as = change_1
		add_claim_on_loss = no
	}
	change_title_holder = {
		holder = scope:temp_ruler
		change = scope:change_1
	}
	resolve_title_and_vassal_change = scope:change_1

	every_in_de_jure_hierarchy = {
		limit = {
			exists = holder
			NOT = { holder = scope:temp_ruler }
			tier = tier_duchy
			holder = { is_independent_ruler = yes }
		}
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change_2
			add_claim_on_loss = no
		}
		holder = {
			if = {
				limit = {
					is_independent_ruler = yes
					tier_difference = {
						target = scope:temp_ruler
						value < 0
					}
				}
				change_liege = {
					liege = scope:temp_ruler
					change = scope:change_2
				}
				resolve_title_and_vassal_change = scope:change_2
			}
		}
	}
}

###################################################################
# @params
# $START_DATE$ $END_DATE$ date string e.g. 1.1.1
# $TARGET_TITLE$ title scope, handle all titles under this title
# $LIEGE_TITLE$ title scope, only handle titles within this realm
# $follow_liege$ bool, if created ruler follow holder of $LIEGE_TITLE$'s culture & faith, if set to no, they use capital culture & faith
# $independent$ bool, if created ruler become independent
# $de_jure$ bool, if yes, only handle de jure titles under $TARGET_TITLE$, otherwise de facto.
# $tier$ num, tier value.
WLTDJAutoStart_create_rulers_effect = {
	if = {
		limit = {
			current_date >= $START_DATE$
			current_date < $END_DATE$
			$LIEGE_TITLE$ = { exists = holder }
		}
		if = {
			limit = { $follow_liege$ = yes }
			$LIEGE_TITLE$.holder ?= {
				save_scope_as = follow_liege
			}
		}
		if = {
			limit = {
				$TARGET_TITLE$ = $LIEGE_TITLE$
				$de_jure$ = no
				$LIEGE_TITLE$.holder.primary_title = $TARGET_TITLE$
			}
			$TARGET_TITLE$ = {
				$TARGET_TITLE$.title_capital_county.duchy = {
					save_scope_as = capital_duchy
				}
				$LIEGE_TITLE$.holder.capital_county.duchy = {
					save_scope_as = ruler_capital_duchy
				}
				$LIEGE_TITLE$.holder = {
					every_held_title = {
						limit = {
							tier = $tier$
							is_titular = no
							trigger_if = {
								limit = {
									tier = tier_county
								}
								# 保留原统治者的首都公国
								NOR = {
									duchy = scope:capital_duchy
									duchy = scope:ruler_capital_duchy
								}
							}
							trigger_else = {
								title_capital_county != $LIEGE_TITLE$.title_capital_county
								title_capital_county != $LIEGE_TITLE$.holder.capital_county
							}
							NOT = { holder ?= { highest_held_title_tier = tier_duchy } } # 避免影响历史头衔
							trigger_if = {
								limit = { NOT = { exists = holder } }
								title_capital_county.holder ?= { highest_held_title_tier = tier_county }
							}
						}
						WLTDJAutoStart_assign_title_effect = { LIEGE_TITLE = $LIEGE_TITLE$ independent = $independent$ }
					}
				}
			}
		}
		else = {
			$TARGET_TITLE$ = {
				$LIEGE_TITLE$.title_capital_county.duchy = {
					save_scope_as = capital_duchy
				}
				$LIEGE_TITLE$.holder.capital_county.duchy = {
					save_scope_as = ruler_capital_duchy
				}
				every_in_de_jure_hierarchy = {
					continue = {
						tier >= $tier$
					}
					limit = {
						target_is_de_jure_liege_or_above = $TARGET_TITLE$
						tier = $tier$
						is_titular = no
						trigger_if = {
							limit = {
								tier = tier_county
							}
							# 保留原统治者的首都公国
							NOR = {
								duchy = scope:capital_duchy
								duchy = scope:ruler_capital_duchy
							}
						}
						trigger_else = {
							title_capital_county != $LIEGE_TITLE$.title_capital_county
							title_capital_county != $LIEGE_TITLE$.holder.capital_county
						}
						NOT = { holder ?= { highest_held_title_tier = tier_duchy } } # 避免影响历史头衔
						trigger_if = {
							limit = { NOT = { exists = holder } }
							title_capital_county.holder ?= { highest_held_title_tier = tier_county }
						}
					}
					WLTDJAutoStart_assign_title_effect = { LIEGE_TITLE = $LIEGE_TITLE$ independent = $independent$ }
				}
			}
		}
		clear_saved_scope = follow_liege
	}
}

WLTDJAutoStart_assign_title_effect = {
	save_scope_as = temp_title
	# 公国+ 位于境内或不存在的头衔，不存在则创建，打包封给一个人
	if = {
		limit = {
			tier > tier_county
			OR = {
				NOT = { exists = holder }
				holder = $LIEGE_TITLE$.holder
				holder = { any_liege_or_above = { this = $LIEGE_TITLE$.holder } }
			}
			title_capital_county = {
				OR = {
					holder = $LIEGE_TITLE$.holder
					holder = { any_liege_or_above = { this = $LIEGE_TITLE$.holder } }
				}
			}
		}
		if = {
			# 最高领主控制 ~~ 缺失历史，刷个火星人来代表封臣
			limit = { scope:temp_title.title_capital_county.holder = $LIEGE_TITLE$.holder }
			if = {
				limit = {
					OR = {
						NOT = { exists = holder }
						holder = $LIEGE_TITLE$.holder
					}
				}
				scope:temp_title.title_capital_county = {
					save_scope_as = temp_county
					WLTDJAutoStart_create_dummy_ruler_effect = yes
				}
				debug_log_scopes = yes
			}
			else_if = {
				limit = {
					holder != $LIEGE_TITLE$.holder
					holder = { any_liege_or_above = { this = $LIEGE_TITLE$.holder } }
				}
				holder = { save_temporary_scope_as = temp_ruler }
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change_1
					add_claim_on_loss = no
				}
				scope:temp_title.title_capital_county = {
					change_title_holder = {
						holder = scope:temp_ruler
						change = scope:change_1
					}
				}
				resolve_title_and_vassal_change = scope:change_1
			}
		}

		else_if = {
			# 首府有历史角色，使用其代表整个下级法理封臣
			limit = { scope:temp_title.title_capital_county.holder = { any_liege_or_above = { this = $LIEGE_TITLE$.holder } } }
			scope:temp_title.title_capital_county.holder = { save_temporary_scope_as = temp_ruler }
		}

		if = {
			limit = {
				exists = scope:temp_ruler
			}
			if = {
				limit = { scope:temp_title.tier > tier_county }
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						holder = $LIEGE_TITLE$.holder
					}
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change_2
						add_claim_on_loss = no
					}
					change_title_holder = {
						holder = scope:temp_ruler
						change = scope:change_2
					}
					resolve_title_and_vassal_change = scope:change_2
				}

				scope:temp_title = {
					create_title_and_vassal_change = {
						type = granted
						save_scope_as = change_3
						add_claim_on_loss = no
					}
					change_title_holder = {
						holder = scope:temp_ruler
						change = scope:change_3
					}
					resolve_title_and_vassal_change = scope:change_3
				}
			}

			WLTDJAutoStart_handle_independence_effect = { LIEGE_TITLE = $LIEGE_TITLE$ independent = $independent$ }
		}
	}
	else_if = {
		limit = {
			holder ?= $LIEGE_TITLE$.holder
		}
		save_scope_as = temp_county
		WLTDJAutoStart_create_dummy_ruler_effect = yes
		WLTDJAutoStart_handle_independence_effect = { LIEGE_TITLE = $LIEGE_TITLE$ independent = $independent$ }
		clear_saved_scope = temp_county
	}
}

WLTDJAutoStart_create_dummy_ruler_effect = {
	if = {
		limit = { exists = scope:follow_liege }
		create_character = {
			location = scope:follow_liege.location
			template = WLTDJAutoStart_ruler_template
			faith = scope:follow_liege.faith
			culture = scope:follow_liege.culture
			gender_female_chance = scope:follow_liege.this_faith_dominant_gender_adjusted_female_chance
			save_temporary_scope_as = temp_ruler
		}
	}
	else = {
		create_character = {
			location = scope:temp_county.title_province
			template = WLTDJAutoStart_ruler_template
			faith = scope:temp_county.faith
			culture = scope:temp_county.culture
			gender_female_chance = scope:temp_county.this_faith_dominant_gender_adjusted_female_chance
			save_temporary_scope_as = temp_ruler
		}
	}
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = change_1
		add_claim_on_loss = no
	}
	change_title_holder = {
		holder = scope:temp_ruler
		change = scope:change_1
	}
	resolve_title_and_vassal_change = scope:change_1
}

WLTDJAutoStart_handle_independence_effect = {
	if = {
		limit = { $independent$ = no }
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change_4
			add_claim_on_loss = no
		}
		scope:temp_ruler = {
			change_liege = {
				liege = $LIEGE_TITLE$.holder
				change = scope:change_4
			}
			resolve_title_and_vassal_change = scope:change_4
		}

		scope:temp_ruler.top_liege = { save_temporary_scope_as = emulated_ruler }
		scope:temp_ruler = {
			WLTDJAutoStart_copy_government_function_effect = { EMULATED_RULER = emulated_ruler }
		}
	}
	else = {
		scope:temp_ruler = {
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change_5
				add_claim_on_loss = no
			}
			becomes_independent = { change = scope:change_5 }
			resolve_title_and_vassal_change = scope:change_5
			$LIEGE_TITLE$.holder = { remove_claim = scope:temp_title }
		}
	}
}




WLTDJAutoStart_copy_government_function_effect = {
	if = {
		limit = {
			scope:$EMULATED_RULER$ = {
				has_title = title:k_yamato
			}
			has_court_rank_trigger = no
		}
		if = {
			limit = {
				scope:$EMULATED_RULER$ = {
					has_government = clan_government
				}
			}
			change_government = clan_government
		}
		else_if = {
			limit = {
				scope:$EMULATED_RULER$ = {
					has_government = legion_government
				}
			}
			change_government = legion_government
		}
		else = {
			change_government = feudal_government
		}
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_celestial NOT = { has_title = title:k_yamato } } }
		change_to_celes_government_effect = yes
		if = { 
			limit = { NOT = { has_realm_law = official_succession_law } }
			add_realm_law_skip_effects = official_succession_law
		}
	}

	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_legion } }
		change_government = legion_government
		if = { 
			limit = { NOT = { has_realm_law = legion_succession_law } }
			add_realm_law_skip_effects = legion_succession_law
		}
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_bureau } }
		change_government = bureau_government
		if = { 
			limit = { NOT = { has_realm_law = official_succession_law } }
			add_realm_law_skip_effects = official_succession_law
		}
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_ulus } }
		change_government = ulus_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_feudal } }
		change_government = feudal_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_republic } }
		change_government = republic_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_theocracy } }
		change_government = theocracy_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_clan } }
		change_government = clan_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_tribal } }
		change_government = tribal_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_nomadic } }
		change_government = nomad_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_herder } }
		change_government = herder_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_mercenary } }
		change_government = mercenary_government
	}
	else_if = {
		limit = { scope:$EMULATED_RULER$ = { government_has_flag = government_is_holy_order } }
		change_government = holy_order_government
	}
}

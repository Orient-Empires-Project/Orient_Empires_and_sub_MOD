pool_bureaucracy_succession = { #这就是科举制
	valid_character = {
		is_capable_adult = yes
		is_imprisoned = no

		OR = {
			culture = { has_cultural_pillar = heritage_chinese }
			culture = { has_innovation = innovation_centralization_of_authority }
			culture = { has_same_culture_heritage = scope:base.culture }
			#AND = {
				#exists = scope:base.primary_title.title_province.culture
				#culture = scope:base.primary_title.title_province.culture
			#}
		}
		OR = {
			location.province_owner.top_liege ?= scope:base.top_liege
			location.province_owner ?= scope:base.top_liege
			location ?= scope:base.top_liege.capital_province
		}
		NOT = { house = scope:base.top_liege.house }
		trigger_if = {
			limit = {
				NOT = { scope:base = { has_realm_law = female_only_law } }
			}
			is_male = yes
		}
		NOR = {
			lifestyle_bureaucrat_3_trigger = yes
			lifestyle_bureaucrat_4_trigger = yes
			lifestyle_bureaucrat_5_trigger = yes
		}
	}
	
	character_score = {
		base = 0

		modifier = {
			lifestyle_bureaucrat_1_trigger = yes
			add = 50
		}
		modifier = {
			lifestyle_bureaucrat_2_trigger = yes
			add = 10
		}
		modifier = { #亲戚
			add = 10
			AND = {
				exists = dynasty
				exists = scope:base.dynasty
				dynasty = scope:base.dynasty				
			}
		}
		modifier = { #寒门
			add = 10 	
			is_lowborn = yes
		}
		#世家侧重
		modifier = {
			exists = dynasty
			dynasty = { dynasty_prestige_level > 3 }
			add = -30
		}
		modifier = {
			exists = dynasty
			dynasty = { dynasty_prestige_level > 5 }
			add = -20
		}
		modifier = { #考分
			add = learning
		}
		modifier = { #女子无才便是德
			factor = 0
			is_female = yes
		}
	}
	
	config = {
		background = bureaucrat
		age = { 16 55 }
	}
	
	selection_count = 20  #候补梯队
	
	pool = heritage
	court = no
	gender = male
}



pool_bureaucrat = { #这就是流官制
	valid_character = {
		is_capable_adult = yes
		is_imprisoned = no

		OR = {
			culture = { has_cultural_pillar = heritage_chinese }
			culture = { has_innovation = innovation_centralization_of_authority }
			has_same_culture_as = scope:base.top_liege
		}
		OR = {
			location.province_owner ?= { top_liege = scope:base.top_liege }
			location.province_owner ?= scope:base.top_liege
			location ?= scope:base.top_liege.capital_county.title_province
		}
		NOR = {
			house = scope:base.top_liege.house
			any_parent ?= { has_realm_law = legion_succession_law }
			any_parent ?= { has_realm_law = single_heir_succession_law }
			any_parent ?= { has_realm_law = tradition_succession_law }
			any_parent.liege ?= { any_neighboring_top_liege_realm_owner = this }
		}
		trigger_if = {
			limit = {
				scope:base.liege = location.province_owner.top_liege
			}
			scope:base.liege = { is_legion_government_trigger = no }
		}
		trigger_if = {
			limit = {
				NOT = { scope:base = { has_realm_law = female_only_law } }
			}
			is_male = yes
		}
		NOR = {
			has_trait = lunatic #纯质
			has_trait = possessed #中邪
			has_trait = peasant_leader #大逆
			has_trait = incapable #失能
			is_illegal_criminal_trigger = yes #众所周知的罪行
		}
		#trigger_if = {
			#limit = {
				#location.province_owner.top_liege = { is_oe_imperial_court_trigger = yes }
			#}
			#scope:base.liege = {
				#NOT = { has_trait = peasant_leader }
			#}
		#}
#		trigger_if = {
#			limit = {
#				scope:base.top_liege = { has_realm_law = celestial_bureaucracy_2 }
#			}
#			NOR = {
#				has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:base.top_liege }
#				has_any_major_negative_opinion_against_character_trigger = { CHARACTER = scope:base.top_liege }
#				has_opinion_modifier = { modifier = peasant_revolt_opinion target = scope:base.top_liege }
#			}
#		}
#		trigger_if = {
#			limit = {
#				scope:base.top_liege = { has_realm_law = celestial_bureaucracy_3 }
#			}
#			has_a_personality_trait_in_common_with_compare_character_trigger = { CHARACTER = scope:base.top_liege }
#		}
	}
	
	character_score = {
		base = age
		#资历 - 转入经验增长
		modifier = {
			add = { value = bureaucracy_exp_value }
		}
		#生活方式
		#modifier = {
			#add = { value = lifestyle_perk_points }
		#}
		#幕僚
		modifier = {
			add = 20
			is_courtier_of = scope:base
			NOT = { is_child_of = scope:base }
		}
		#门第
		modifier = {
			exists = dynasty
			NOT = { dynasty = scope:base.top_liege.dynasty }
			dynasty = { dynasty_prestige_level >= 2 }
			add = 30 
			factor = dynasty.dynasty_prestige_level
		}
		modifier = {
			add = 50
			NOT = { dynasty = scope:base.top_liege.dynasty }
			any_close_or_extended_family_member = {
				is_alive = yes
				OR = {
					is_councillor_of = scope:base.top_liege
					target_is_liege_or_above = scope:base.top_liege
				}
			}
		}
		modifier = {
			add = 50
			NOT = { dynasty = scope:base.top_liege.dynasty }
			any_close_or_extended_family_member = {
				is_alive = yes
				OR = {
					is_vassal_of = scope:base.top_liege
					is_powerful_vassal = yes
				}
			}
		}
		#寒门
		modifier = {
			add = 100
			NOT = { dynasty = scope:base.top_liege.dynasty }
			is_oe_aristocrat = no
			scope:base.top_liege ?= { has_realm_law_flag = pool_bureaucracy_succession_low_family } #优先寒门选官
		}
		#京城
		modifier = {
			add = 100
			OR = {
				location.province_owner ?= scope:base.top_liege
				location ?= scope:base.top_liege.capital_county.title_province
			}
			scope:base.top_liege ?= { has_realm_law_flag = chinese_bureaucracy_empire_courtier } #优先天子驾前 
		}

		modifier = {
			add = 50
			governor_efficiency >= 1
		}

		modifier = {
			add = 20
			has_trait = jinshi
		}
		modifier = {
			add = 50
			has_trait = zhuangyuan
		}
		#官阶州等对位
		modifier = {
			scope:base.primary_title.tier = tier_barony
			lifestyle_bureaucrat_1_trigger = yes
			add = 50
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_2 = yes }
			lifestyle_bureaucrat_2_trigger = yes
			add = 100
		}

		modifier = {
			scope:base = { bureaucrat_title_rank_3 = yes }
			lifestyle_bureaucrat_1_trigger = yes
			add = -150
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_3 = yes }
			lifestyle_bureaucrat_2_trigger = yes
			add = -100
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_3 = yes }
			lifestyle_bureaucrat_3_trigger = yes
			add = 100
		}

		modifier = {
			scope:base = { bureaucrat_title_rank_4 = yes }
			lifestyle_bureaucrat_1_trigger = yes
			add = -200
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_4 = yes }
			lifestyle_bureaucrat_2_trigger = yes
			add = -150
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_4 = yes }
			lifestyle_bureaucrat_3_trigger = yes
			add = 50
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_4 = yes }
			lifestyle_bureaucrat_4_trigger = yes
			add = 100
		}

		modifier = {
			scope:base = { bureaucrat_title_rank_5 = yes }
			lifestyle_bureaucrat_1_trigger = yes
			add = -200
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_5 = yes }
			lifestyle_bureaucrat_2_trigger = yes
			add = -150
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_5 = yes }
			lifestyle_bureaucrat_3_trigger = yes
			add = -100
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_5 = yes }
			lifestyle_bureaucrat_4_trigger = yes
			add = 100
		}
		modifier = {
			scope:base = { bureaucrat_title_rank_5 = yes }
			lifestyle_bureaucrat_5_trigger = yes
			add = 150
		}
		
		modifier = { #玩家继承人
			factor = 10
			any_close_family_member = {
				is_ai = no
				player_heir ?= prev
			}
			
		}
		modifier = { #女子无才便是德
			add = -2000
			is_female = yes
		}		
	}
	
	
	config = {
		background = noble
		age = { 25 70 }
	}
	
	selection_count = 30 #让大族排在前
	
	pool = heritage
	court = no
	gender = male
}
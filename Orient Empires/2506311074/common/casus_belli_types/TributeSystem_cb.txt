tributary_war_cb = {
    group = claim
	ai_only_against_neighbors = yes

	war_name = claim_tributary_cb
	my_war_name = trib_war_me # Used when the claimant and attacker is the same person
	war_name_base = trib_war_m_b
	my_war_name_base = trib_war_m_b

    truce_days = 970

    allowed_for_character = {
        scope:attacker = { oe_can_be_suzerain_trigger = yes  }
		NOT = {
			government_has_flag = government_is_landless_adventurer
		}
    }
    allowed_against_character = {
        scope:attacker = { oe_can_be_suzerain_of = { TARGET = scope:defender }  }
        custom_description = {
            text = not_a_tributary
            NOT = {
                scope:defender = { any_tributary = { this = scope:attacker } }
                scope:attacker = { suzerain = scope:defender }
            }
        }
        custom_description = {
            text = will_not_make_tributary_in_china          
            trigger_if = {
                limit = { scope:defender = { capital_province = { geographical_region = world_asia_china } } }
                scope:attacker = { NOT = { culture = { has_cultural_parameter = patriarch_society } } }
            }      
        }
    }

    cost = {
        prestige = {
            value = 150
        }
    }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_victory_desc_defender
			}
			desc = trib_on_victory_desc
		}
	}

    on_victory = {
        scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

        if = {
            limit = { scope:defender = { is_tributary = yes } }
            replace_suzerain_effect = {
                TRIBUTARY = scope:defender
                SUZERAIN = scope:attacker
            }
        }
        else = {
            make_tributary = {
                TYPE = tributary_non_permanent
                SUZERAIN = scope:attacker
                TRIBUTARY = scope:defender
            }
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_white_peace_desc_defender
			}
			desc = trib_on_white_peace_desc
		}
	}

	on_white_peace = { 
        scope:attacker = {
            add_prestige = -150
        }
    }

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_defeat_desc_defender
			}
			desc = trib_on_defeat_desc_attacker
		}
	}

    on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }
        
        scope:attacker = {
            add_prestige = -150
            pay_long_term_gold = { 
                target = scope:defender 
                gold = 150 
            }
        }
    }

    on_invalidated_desc = {
        desc = trib_on_invalidated_desc
    }

}

permament_tributary_war_cb = {
    group = claim
	ai_only_against_neighbors = yes

	war_name = claim_permanent_tributary_cb
	my_war_name = perma_trib_war_me # Used when the claimant and attacker is the same person
	war_name_base = perma_trib_war_m_b
	my_war_name_base = perma_trib_war_m_b

    truce_days = 970

    allowed_for_character = {
        scope:attacker = { oe_can_be_suzerain_trigger = yes  }
		NOT = {
			government_has_flag = government_is_landless_adventurer
		}
    }
    allowed_against_character = {
        scope:attacker = { oe_can_be_suzerain_of = { TARGET = scope:defender }  }
        custom_description = {
            text = not_a_tributary
            NOR = {
                scope:defender = { any_tributary = { this = scope:attacker } }
                scope:attacker = { suzerain = scope:defender }
            }
        }
        custom_description = {
            text = will_not_make_tributary_in_china        
            trigger_if = {
                limit = { scope:defender = { capital_province = { geographical_region = world_asia_china } } }
                scope:attacker = { NOT = { culture = { has_cultural_parameter = patriarch_society } } }
            }      
        }
    }

    cost = {
        prestige = {
            value = 150
        }
    }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_victory_desc_defender
			}
			desc = perma_trib_on_victory_desc_attacker
		}
	}

    on_victory = {
        scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

        if = {
            limit = { scope:defender = { is_tributary = yes } }
            replace_suzerain_effect = {
                TRIBUTARY = scope:defender
                SUZERAIN = scope:attacker
            }
        }
        else = {
            make_tributary = {
                TYPE = tributary_subjugated
                SUZERAIN = scope:attacker
                TRIBUTARY = scope:defender
            }
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_white_peace_desc_defender
			}
			desc = perma_trib_on_white_peace_desc
		}
	}

	on_white_peace = { 
        scope:attacker = {
            add_prestige = -150
        }
    }

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_defeat_desc_defender
			}
			desc = perma_trib_on_defeat_desc
		}
	}

    on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

        scope:attacker = {
            add_prestige = -150
            pay_long_term_gold = { target = scope:defender gold = 150 }
        }
    }

	on_invalidated_desc = {
		desc = perma_trib_on_invalidated_desc
	}

}

free_from_tributary_cb = {
    group = independence
	ai_only_against_neighbors = no

	war_name = free_from_tributary_cb
	my_war_name = independence_tributary_war_me # Used when the claimant and attacker is the same person
	war_name_base = independence_tributary_war_m_b
	my_war_name_base = independence_tributary_war_m_b

    truce_days = 970

    allowed_for_character = {
        scope:attacker = {
            is_tributary = yes
        }
		NOT = {
			government_has_flag = government_is_landless_adventurer
		}
    }

    allowed_against_character = {
        scope:attacker = { suzerain = scope:defender }
    }

    cost = {
        prestige = {
            value = 150
        }
    }


	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_victory_desc_defender
			}
			desc = trib_indp_on_victory_desc
		}
	}

    on_victory = {
        scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

        unset_tributary = {
            TRIBUTARY = scope:attacker
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_white_peace_desc_defender
			}
			desc = trib_indp_on_white_peace_desc
		}
	}

	on_white_peace = { 
        scope:attacker = {
            add_prestige = -150
            change_tribute_exp_effect = { EXP = -50 }
        }
    }


	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_defeat_desc_defender
			}
			desc = trib_indp_on_defeat_desc
		}
	}

    on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

        scope:attacker = {
            add_prestige = -300
            pay_long_term_gold = { target = scope:defender gold = 550 }
            change_tribute_exp_effect = { EXP = -100 }
        }
    }

    on_invalidated_desc = {
        desc = trib_indp_on_invalidated_desc
    }

}
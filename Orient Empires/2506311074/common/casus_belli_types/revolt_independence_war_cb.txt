revolt_independence_war = { #凝辅国
	group = independence

	allowed_for_character = {
		scope:attacker = {
			OR = {
				#has_trait = adventurer
				has_trait = peasant_leader
				has_trait = hero
				faith = {
					has_doctrine = doctrine_tenet_unrelenting_faith
				}
				AND = {
					government_has_flag = government_is_landless_adventurer
					OR = {
						has_realm_law = camp_purpose_mercenaries
						has_realm_law = camp_purpose_brigands
						has_realm_law = camp_purpose_legitimists
					}
				}
				
			}
		}
	}

	allowed_against_character = {
		OR = {
			scope:attacker = {
				OR = {
					top_liege = scope:defender
					is_at_war_with = top_liege 
				}
			}
			scope:defender = { is_oe_imperial_government_trigger = yes }
		}
	}
	
	cost = {
		piety = {
			value = 0
			if = { # Attacking your HoF is impious
				limit = {
					exists = scope:attacker.faith.religious_head
					scope:attacker.faith.religious_head = scope:defender
				}
				if = {
					limit = {
						scope:attacker.faith = {
							has_doctrine = doctrine_spiritual_head
						}
					}
					add = {
						value = massive_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
				else = {
					add = {
						value = medium_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
			}
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						government_has_flag = government_is_theocracy
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
		}
		prestige = {
			value = 0
			add = {
				value = 500
				desc = CB_BASE_COST
			}
			if = {
				limit = {
					scope:attacker = {
						government_has_flag = government_is_tribal
					}
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_chronicle_writing
							has_innovation = innovation_land_grants
							has_innovation = innovation_rightful_ownership
						}
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
							}
							OR = {
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		# Remove offending HumSac modifiers.
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
		custom_tooltip = revolt_independence_war_liege_will_attend
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_victory_desc_local_player_defender_attacker_alone
			}
			desc = independence_war_victory_desc_local_player_attacker_alone # Desc for a third party involved
		}
		desc = revolt_independence_war_victory_desc
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = {
			add_character_flag = ai_should_not_transfer
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change0
			add_claim_on_loss = yes
		}
		scope:defender = {
			every_realm_county = {
				limit = {
					exists = var:occupied_rebellion
					var:occupied_rebellion = scope:attacker
				}
				change_title_holder = {
					holder = scope:attacker
					change = change0
				}
			}
		}
		resolve_title_and_vassal_change = scope:change0

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		
		scope:attacker = {
			becomes_independent = {
				change = scope:change
			}
			add_character_modifier = {
				modifier = revolt_independence_war_defender_won_opinion_buff
				years = 10
			}
			hidden_effect = {
				set_variable = {
					name = independence_war_former_liege
					value = scope:defender
				}
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
			}
		}
		custom_tooltip = fp1_varangian_adventurer_conquest.summaries.control_rebate
		scope:attacker = { trigger_event = fp1_varangian_adventures.0001 }
		resolve_title_and_vassal_change = scope:change

		scope:defender = {  #王朝崩溃
			add_prestige = massive_prestige_loss
			add_prestige_level = -5
			add_character_modifier = {
				modifier = revolt_independence_war_defender_defeat_income_debuff
				years = 10
			}
			add_character_modifier = {
				modifier = revolt_independence_war_defender_defeat_levy_debuff
				years = 10
			}
			add_character_modifier = {
				modifier = revolt_independence_war_defender_defeat_opinion_debuff
				years = 10
			}
			stress_impact = {
 				arrogant = massive_stress_impact_gain
				greedy = massive_stress_impact_gain
 			}
			every_vassal = {
				limit = {
					OR = {
						highest_held_title_tier >= tier_duchy
						NOT = { culture = scope:defender.culture }
					}
				}
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change2
				}
				change_liege_or_become_independent = {
					CHANGE = scope:change2
					VASSAL = this
				}
				resolve_title_and_vassal_change = scope:change2
			}
		}	
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc
		}
		desc = revolt_independence_war_defeat_desc
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		
		scope:attacker = {
			# Prestige for Defender
			add_prestige = massive_prestige_loss
			add_prestige_level = -1
			stress_impact = {
 				arrogant = massive_stress_impact_gain
 			}
		}
		custom_tooltip = revolt_independence_on_war_defeat_custom_tooltip

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		scope:attacker = {
			every_held_title = {
				limit = {
					tier >= tier_county
				}
				change_title_holder = {
					holder = scope:defender
					change = scope:change
				}
			}
			every_vassal = {
				change_liege = {
					liege = scope:defender
					change = scope:change
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

		scope:attacker = {
			hard_imprison_character_effect = {
				TARGET = this
				IMPRISONER = scope:defender
			}
			hidden_effect = {
				every_courtier = {
					hard_imprison_character_effect = {
						TARGET = this
						IMPRISONER = scope:defender
					}
					scope:defender = {
						add_opinion = {
							target = prev
							modifier = aganist_me_in_revolt_war
						}
					}
				}
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = yes
				}
				every_vassal = {
					limit = { highest_held_title_tier >= tier_county }
					change_liege = {
						liege = scope:defender
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			scope:defender = {
				add_opinion = {
					target = prev
					modifier = vassal_lost_faction_revolt_war
				}
			}
			destroy_title = scope:attacker.primary_title
			#destroy_title = title:e_huang_qi
			#destroy_title = title:FACTION_chinese_peasant_title_NAME
		}
		scope:defender = {
			trigger_event = revolt_war_end.01
			add_character_modifier = {
				modifier = revolt_independence_war_defender_won_opinion_debuff
				years = 10
			}
			add_character_modifier = {
				modifier = revolt_independence_war_defender_won_county_control_factor_buff
				years = 10
			}
		}
	}

	target_titles = all

	ignore_effect = change_title_holder
	white_peace_possible = no

	on_invalidated_desc = msg_invalidate_war_title
	
	check_attacker_inheritance_validity = yes
	check_defender_inheritance_validity = yes
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer
	war_name = "revolt_independence_war_name"
	war_name_base = "revolt_independence_war_base_name"
	cb_name = "revolt_independence_war_cb_name"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8
	attacker_ticking_warscore = 0.05
	defender_ticking_warscore = 0.02 #WLTDJFIX往来天地间修正
	max_attacker_score_from_battles = 200
	max_defender_score_from_battles = 200
	attacker_score_from_occupation_scale = 50 #WLTDJFIX往来天地间修正
	defender_score_from_occupation_scale = 50 #WLTDJFIX往来天地间修正
	attacker_score_from_battles_scale = 80
	defender_score_from_battles_scale = 50  #微调2022.1.21
	max_ai_diplo_distance_to_title = 500
	defender_ticking_warscore_delay = { months = 12 }
	full_occupation_by_defender_gives_victory = no 		# Full occupation by the defender won't automatically give 100% warscore
	landless_attacker_needs_armies = yes 

	battle_participation_mult = 3.0
	siege_participation_mult = 3.0	

}

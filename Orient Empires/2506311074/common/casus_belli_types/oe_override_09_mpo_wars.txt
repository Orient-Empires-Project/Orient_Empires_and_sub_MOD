#migration_cb
#mpo_nomad_invasion_cb
#humiliation_cb
#retaliation_cb
#sovereignty_cb
#mpo_great_war_of_defiance_cb
#mpo_gok_onslaught_cb

##########
# Special CB used for migrating
##########

# Used in code - the only legal way to start a migration war
#
migration_cb = {
	icon = migration_cb
	group = migration

	allow_hostages = no
	white_peace_possible = no
	target_de_jure_regions_above = yes
	allowed_for_character = {
		government_has_flag = government_is_nomadic
	}
	allowed_against_character = {
		scope:defender = {
			government_has_flag = government_is_ulus
		}
	}

	ignore_effect = change_title_holder
	valid_to_start = { always = no }

	should_invalidate = {}

	on_invalidated_desc = msg_remove_migration_cb_invalidated_message

	cost = {}

	on_declaration = {
		on_declared_war = yes
		scope:attacker = {
			every_in_list = {
			 	variable = obedient_vassals
			 	limit = { is_ai = yes }
				scope:war = { add_attacker = prev }
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = migration_cb_victory_desc_attacker
			}
			desc = migration_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { 
			show_pow_release_message_effect = yes 
			if = {
				limit = {
					is_ai = yes
				}
				set_variable = {
					name = migration_cooldown
					years = migration_cooldown_value
				}
			}
		}

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		scope:attacker = { play_sound_effect = "event:/DLC/CE2/UI/Notifications/ce2_ui_notifications_migration_positive" }
		scope:defender = { play_sound_effect = "event:/DLC/CE2/UI/Notifications/ce2_ui_notifications_migration_negative" }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = MIGRATION_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		show_as_tooltip = {
			every_in_list = {
				list = vassals_taken
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
			
			every_in_list = {
				list = titles_taken
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
					take_baronies = yes
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# Move into new lands
		scope:attacker = {
			domicile ?= {
				move_domicile = scope:attacker.capital_province
			}
		}

		scope:war = { set_variable = migration_victory }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = migration_cb_white_peace_desc_defender
			}
			desc = migration_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = migration_cb_defeat_desc_defender
			}
			desc = migration_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		scope:attacker = { play_sound_effect = "event:/DLC/CE2/UI/Notifications/ce2_ui_notifications_migration_negative" }
		scope:defender = { play_sound_effect = "event:/DLC/CE2/UI/Notifications/ce2_ui_notifications_migration_positive" }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "MIGRATION_WAR_NAME"
	war_name_base = "MIGRATION_WAR_NAME_BASE"
	cb_name = "MIGRATION_WAR_CB_NAME"

	interface_priority = 79

	attacker_wargoal_percentage = 0.8

	defender_score_from_battles_scale = 300
	attacker_score_from_battles_scale = 300
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}


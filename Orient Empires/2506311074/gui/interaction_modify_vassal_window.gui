window = {
	name = "modify_vassal_contract_interaction_window"
	parentanchor = center
	widgetanchor = top|hcenter
	position = { 270 -400 }
	size = { 600 700 } # Doesn't do much cause of the set_parent_size_to_minimum below
	layer = middle

	using = Window_Background
	using = Window_Decoration

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		name = "window_content"
		set_parent_size_to_minimum = yes
		minimumsize = { 0 700 }

		using = Window_Margins

		datacontext = "[ModifySubjectContractInteractionWindow.GetCharacterInteractionConfirmationWindow]"
		datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreview]"
		datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"

		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text_single = {
					parentanchor = top|hcenter
					text = "CONTRACT_NAME"
					using = Font_Type_Flavor
					using = Font_Size_Big
				}
			}

			blockoverride "button_close"
			{
				onclick = "[ModifySubjectContractInteractionWindow.Close]"
			}
		}

		hbox = {
			layoutpolicy_vertical = expanding
			margin_top = -5

			vbox_obligation_negotiation = {
				name = "obligation_level_negotiation"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				spacing = 10
				margin_bottom = 20

				using = Background_Letter
			}

			vbox_contract_result_info = {
				name = "contract_result_info"
				layoutpolicy_vertical = expanding

				spacing = 10
				margin = { 10 0 }
				margin_top = 5
				margin_bottom = 20

				using = FeudalVassalBackground
				using = NonFeudalVassalBackground
				using = AdminVassalBackground
				using = NomadVassalBackground
			}
		}
	}
}

types ModifySubjectContractsShared
{
	type vbox_obligation_negotiation = vbox
	{
		vbox_default_negotiation = {
		 	name = "default_subject_paper_contract"
		 	visible = "[SubjectContract.HasModifyContractLayout('default')]"

		 	layoutpolicy_horizontal = expanding
		 	layoutpolicy_vertical = expanding
		 	margin = { 20 20 }
		 	spacing = 5
		}

		vbox_clan_negotiation = {
			name = "clan_vassal_paper_contract"
			visible = "[SubjectContract.HasModifyContractLayout('clan')]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 20 20 }
			spacing = 5
		}

		vbox_administrative_negotiation = {
			name = "administrative_vassal_paper_contract"
			visible = "[SubjectContract.HasModifyContractLayout('admin')]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 20 5 }
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin_bottom = 5

			divider = {
				layoutpolicy_horizontal = expanding

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					blend_mode = alphamultiply
				}
			}
		}

		button_standard = {
			name = "reset_button"
			onclick = "[ModifySubjectContractInteractionWindow.ResetToCurrent]"
			enabled = "[Not( ModifySubjectContractInteractionWindow.IsPreviewSameAsCurrent )]"
			text = "RESET_CONTRACT_CHANGES"
			using = tooltip_above

			background = {
				using = Background_Area_Light
				alpha = 0.8
			}
		}
	}

	type widget_major_obligation_level = widget
	{
		datacontext = "[ObligationLevelLineItem.AccessItem]"
		size = { 120 83 }
		position = "[ObligationLevelLineTree.GetItemPosition( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

		container = {
			parentanchor = center

			widget = {
				name = "top_pin"
				visible = "[ObligationLevelLineItem.SetupTopWidget( PdxGuiWidget.Self )]"
			}

			widget = {
				name = "bottom_pin"
				visible = "[ObligationLevelLineItem.SetupBottomWidget( PdxGuiWidget.Self )]"
			}
		}

		button_letter = {
			parentanchor = center
			size = { 100 80 }

			onclick = "[ModifySubjectContractInteractionWindow.SelectObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			down = "[ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			enabled = "[ModifySubjectContractInteractionWindow.IsObligationLevelEnabled( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

			tooltip = "[ModifySubjectContractInteractionWindow.GetObligationLevelTooltipFor( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			using = tooltip_above

			text_single = {
				text = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetName]"
				visible = "[Not( ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self ) )]"
				default_format = "#light_background"
				parentanchor = center
				position = { 0 -3 }
			}

			text_single = {
				text = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetName]"
				visible = "[ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
				default_format = "#high"
				parentanchor = center
				position = { 0 -3 }
			}

			background = {
				using = Background_Area_Dark
				visible = "[ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			}

			icon = {
				parentanchor = top|hcenter
				position = { 0 -5 }
				texture = "gfx/interface/buttons/button_tree_expand.dds"
				framesize = { 36 36 }
				size = { 24 24 }
				frame = 2
				tintcolor = { 0.4 0.4 0.5 0.7 }
				visible = "[ModifySubjectContractInteractionWindow.IsCurrentObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

				using = Mask_Rough_Edges
			}
		}
	}

	type vbox_minor_obligations_radio_list = vbox
	{
		background = {
			using = Background_Area_With_Header
			alpha = 0.75
			margin_top = 2
		}

		item = {
			vbox_minor_obligation_radio_item = { }
		}
	}

	type vbox_minor_obligation_radio_item = vbox
	{
		datacontext = "[ObligationLevelRadioButtons.GetContainerData]"
		visible = "[ObligationContainerData.ShouldShow( ModifySubjectContractInteractionWindow.GetContractPreview )]"

		text_single = {
			text = "[ObligationContainerData.GetName]"
			using = Font_Size_Medium
			default_format = "#light_background"
		}

		hbox = {
			datamodel = "[ObligationLevelRadioButtons.Access]"
			spacing = 20
			margin = { 10 12 }

			item = {
				hbox_minor_obligation_radio_option = { }
			}
		}
	}

	type hbox_minor_obligation_radio_option = hbox
	{
		button_radio_label = {
			onclick = "[ModifySubjectContractInteractionWindow.SelectObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			enabled = "[ModifySubjectContractInteractionWindow.IsObligationLevelEnabled( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			visible = "[ModifySubjectContractInteractionWindow.IsObligationLevelVisible( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

			blockoverride "radio"
			{
				frame = "[BoolTo1And2( ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self ) )]"
			}
			blockoverride "text"
			{
				text = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetName]"
				default_format = "#light_background"
			}

			tooltip = "[ModifySubjectContractInteractionWindow.GetObligationLevelTooltipFor( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
		}

		expand = {}
	}

	type widget_minor_obligation_checkbox_item = widget
	{
		datacontext = "[ObligationLevelCheckbox.GetContainerData]"
		visible = "[ObligationContainerData.ShouldShow( ModifySubjectContractInteractionWindow.GetContractPreview )]"

		background = {
			using = Background_Area_With_Header
			alpha = 0.75
		}

		vbox = {
			margin_left = 10
			spacing = 5

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[ObligationContainerData.GetName]"
				default_format = "#light_background"
				max_width = 180
				using = Font_Size_Medium

				margin_top = 3
			}

			hbox = {
				datacontext = "[ObligationLevelCheckbox.GetLevel( '(int32)1' )]" # First one is always no effect/disabled option
				layoutpolicy_horizontal = expanding

				alwaystransparent = no
				spacing = 5
				margin_top = 3

				button_checkbox_label = {
					# Order dependent, first select the unselected level then set it as the new selected one
					onclick = "[ModifySubjectContractInteractionWindow.SelectObligationLevel( ObligationLevelCheckbox.GetLevel( ObligationLevelCheckbox.GetUnselectedLevelIndex ) )]"
					onclick = "[ObligationLevelCheckbox.ToggleSelection]"

					blockoverride "checkbox"
					{
						checked = "[ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
						enabled = "[ModifySubjectContractInteractionWindow.IsObligationLevelEnabled( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
					}

					blockoverride "text"
					{
						text = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetName]"
						default_format = "#light_background"
					}
				}

				expand = {}

				tooltip = "[ModifySubjectContractInteractionWindow.GetObligationLevelTooltipFor( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
			}

			expand = {}
		}
	}

	type hbox_sigil_and_signatures = hbox
	{
		coa_character_sigil = {
			datacontext = "[SubjectContract.GetLiege]"

			blockoverride "size"
			{
				size = { 80 80 }
			}
			blockoverride "sigil_size"
			{
				size = { 56 56 }
			}
		}

		expand = {}

		text_single = {
			name = "liege_signature"
			max_width = 430
			align = left
			layoutpolicy_horizontal = expanding
			default_format = "#light_background"

			text = "CONTRACT_LIEGE_SIGNATURE"
			using = Font_Type_Flavor
			using = Font_Size_Medium
			using = Text_Light_Background_Overrides
		}

		coa_character_sigil = {
			datacontext = "[SubjectContract.GetSubject]"

			blockoverride "size"
			{
				size = { 80 80 }
			}
			blockoverride "sigil_size"
			{
				size = { 56 56 }
			}
		}

		expand = {}

		text_single = {
			name = "vassal_signature"
			max_width = 430
			align = left
			layoutpolicy_horizontal = expanding
			default_format = "#light_background"

			text = "CONTRACT_VASSAL_SIGNATURE"
			using = Font_Type_Flavor
			using = Font_Size_Medium
			using = Text_Light_Background_Overrides
		}
	}

	type vbox_contract_result_info = vbox
	{
		hbox = {
			name = "vassal_profile"
			datacontext = "[SubjectContract.GetSubject]"
			visible = "[Not( IsAdministrativeRuler( Character ) )]"
			margin_right = 10

			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Area
			}

			portrait_head = {
				blockoverride "opinion_box" {}
			}

			expand = {}

			text_multi = {
				text = "VASSAL_CONTRACT_VASSAL_TITLE"
				using = Font_Size_Medium
				using = Font_Type_Flavor
				align = center
				autoresize = yes
				maximumsize = { 300 -1 }
			}

			expand = {}

			coa_realm_medium_crown = {}
		}
		hbox = {
			name = "vassal_profile_admin"
			datacontext = "[SubjectContract.GetSubject]"
			visible = "[IsAdministrativeRuler( Character )]"
			margin_right = 10

			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Area
				margin = { 0 5 }
			}

			hbox = {
				margin_top = -10
				coa_realm_big_crown = {}
			}

			expand = {}

			text_multi = {
				text = "VASSAL_CONTRACT_VASSAL_TITLE_ADMIN"
				using = Font_Size_Medium
				using = Font_Type_Flavor
				align = center
				autoresize = yes
				maximumsize = { 300 -1 }
			}

			expand = {}

			portrait_head = {
				blockoverride "opinion_box" {}
				blockoverride "coa" {}
			}
		} # vassal_profile

		vbox = {
			visible = "[Not(Or(ModifySubjectContractInteractionWindow.IsRightfulLiege, ModifySubjectContractInteractionWindow.GetContractPreview.IsTributary))]"
			margin = { 5 5 }

			hbox = {
				background = {
					using = Background_Area_Dark
					margin = { 16 8 }
				}

				warning_icon = {
					size = { 25 25 }
				}

				text_multi = {
					min_width = 300
					max_width = 400
					autoresize = yes
					margin = { 5 0 }

					text = "SUBJECT_CONTRACT_LIEGE_IS_NOT_RIGHTFUL_LIEGE_NOTICE"
					align = nobaseline
					using = Font_Size_Small
				}
			}
		}

		datacontext = "[CharacterInteractionConfirmationWindow.GetEffectsDescription.GetDisplayedEffects]"

		hbox = {
			visible = "[DisplayedInteractionEffects.HasAnyEffects]"
			layoutpolicy_horizontal = expanding
			margin = { 10 0 }

			text_label_left = {
				text = CONTRACT_EFFECTS_HEADER
			}
			expand = {}
		}

		vbox_character_interaction_effects_simple = {
			visible = "[DisplayedInteractionEffects.HasAnyEffects]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			datacontext = "[CharacterInteractionConfirmationWindow.GetEffectsDescription]"
		}

		vbox = {
			name = "no_effect_notice"
			visible = "[Not( DisplayedInteractionEffects.HasAnyEffects )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreview]"

			text_multi = {
				visible = "[Not( DisplayedInteractionEffects.HasAnyEffects )]"
				text = "SUBJECT_CONTRACT_OBLIGATION_NO_EFFECT"
				using = Font_Size_Medium
				max_width = 400
				autoresize = yes
			}
		}

		vbox = {
			spacing = 10

			vbox = {
				name = "tax_levy_opinion_info"
				layoutpolicy_horizontal = expanding
				spacing = 15
				margin_top = 10

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 40

					# Final tax obligations
					vbox = {
						visible = "[ModifySubjectContractInteractionWindow.HasContractTaxObligations]"
						spacing = 5

						text_label_center = {
							visible = "[Character.GetGovernment.IsType('feudal_government')]"
							text = "SUBJECT_CONTRACT_OBLIGATIONS_TITLE"
						}
						text_label_center = {
							visible = "[Not(Character.GetGovernment.IsType('feudal_government'))]"
							text = "NON_FEUDAL_SUBJECT_CONTRACT_OBLIGATIONS_TITLE"
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							highlight_icon = {
								size = { 30 30 }
								texture = "gfx/interface/icons/icon_gold.dds"
							}

							progressbar_standard = {
								size = { 90 25 }
								value = "[FixedPointToProgressbarValue(SubjectContract.GetTaxRatioForLiege)]"

								text_single = {
									parentanchor = center
									position = { 0 -2 }
									text = "[ModifySubjectContractInteractionWindow.GetContractPreviewCachedTax|=2]"
									default_format = "#high"
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreviewTaxBreakdown]"
										blockoverride "levy_info_visible"
										{
											visible = no
										}
										blockoverride "contribution_tooltip_header"
										{
											text = "[SelectLocalization(SubjectContract.GetLiege.IsLocalPlayer, 'MRW_TT_TAXES_TO_ME', SelectLocalization(SubjectContract.GetSubject.HasSuzerain, 'MRW_TT_TAXES_TO_MY_SUZERAIN', 'MRW_TT_TAXES_TO_MY_LIEGE'))]"
										}
									}
								}
								using = tooltip_ws
							}

							expand = {}

						}
					}

					expand = {}

					# Final levy obligations
					vbox = {
						visible = "[ModifySubjectContractInteractionWindow.HasContractLevyObligations]"
						spacing = 5

						text_label_center = {
							visible = "[Character.GetGovernment.IsType('feudal_government')]"
							text = "SUBJECT_CONTRACT_OBLIGATIONS_TITLE_LEVIES"
						}
						text_label_center = {
							visible = "[Not(Character.GetGovernment.IsType('feudal_government'))]"
							text = "NON_FEUDAL_SUBJECT_CONTRACT_OBLIGATIONS_TITLE_LEVIES"
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							expand = {}

							highlight_icon = {
								size = { 30 30 }
								texture = "gfx/interface/icons/icon_levies.dds"
							}

							progressbar_standard = {
								size = { 90 25 }
								value = "[FixedPointToProgressbarValue(SubjectContract.GetLevyRatioForLiege)]"

								text_single = {
									parentanchor = center
									position = { 0 -2 }
									text = "[ModifySubjectContractInteractionWindow.GetContractPreviewCachedLeviesFormatted]"
									default_format = "#high"
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreviewLeviesBreakdown]"
										blockoverride "tax_info_visible"
										{
											visible = no
										}
										blockoverride "contribution_tooltip_header"
										{
											text = "[SelectLocalization(SubjectContract.GetLiege.IsLocalPlayer, 'MRW_TT_LEVIES_TO_ME', SelectLocalization(SubjectContract.GetSubject.HasSuzerain, 'MRW_TT_LEVIES_TO_MY_SUZERAIN', 'MRW_TT_LEVIES_TO_MY_LIEGE'))]"
										}
									}
								}
								using = tooltip_ws
							}
						}
					}

					# Final herd obligations
					vbox = {
						visible = "[ModifySubjectContractInteractionWindow.HasContractHerdObligations]"
						spacing = 5

						text_label_center = {
							text = "SUBJECT_CONTRACT_OBLIGATIONS_TITLE_HERD"
						}
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							expand = {}

							highlight_icon = {
								size = { 30 30 }
								texture = "gfx/interface/icons/icon_herd.dds"
							}

							progressbar_standard = {
								size = { 90 25 }
								value = "[FixedPointToProgressbarValue(SubjectContract.GetHerdRatioForLiege)]"

								text_single = {
									parentanchor = center
									position = { 0 -2 }
									text = "[ModifySubjectContractInteractionWindow.GetContractPreviewCachedHerd|=1]"
									default_format = "#high"
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreviewHerdBreakdown]"
										blockoverride "tax_info_visible"
										{
											visible = no
										}
										blockoverride "contribution_tooltip_header"
										{
											text = "[SelectLocalization(SubjectContract.GetLiege.IsLocalPlayer, 'MRW_TT_HERD_TO_ME', SelectLocalization(SubjectContract.GetSubject.HasSuzerain, 'MRW_TT_HERD_TO_MY_SUZERAIN', 'MRW_TT_HERD_TO_MY_LIEGE'))]"
										}
									}
								}
								using = tooltip_ws
							}
						}
					}

					# Final prestige obligations
					vbox = {
						visible = "[ModifySubjectContractInteractionWindow.HasContractPrestigeObligations]"
						spacing = 5

						text_label_center = {
							text = "SUBJECT_CONTRACT_OBLIGATIONS_TITLE_PRESTIGE"
						}
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							expand = {}

							highlight_icon = {
								size = { 30 30 }
								texture = "gfx/interface/icons/currencies/icon_prestige_01.dds"
							}

							progressbar_standard = {
								size = { 90 25 }
								value = "[FixedPointToProgressbarValue(SubjectContract.GetPrestigeRatioForLiege)]"

								text_single = {
									parentanchor = center
									position = { 0 -2 }
									text = "[ModifySubjectContractInteractionWindow.GetContractPreviewCachedPrestige|=2]"
									default_format = "#high"
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreviewPrestigeBreakdown]"
										blockoverride "tax_info_visible"
										{
											visible = no
										}
										blockoverride "contribution_tooltip_header"
										{
											text = "[SelectLocalization(SubjectContract.GetLiege.IsLocalPlayer, 'MRW_TT_PRESTIGE_TO_ME', SelectLocalization(SubjectContract.GetSubject.HasSuzerain, 'MRW_TT_PRESTIGE_TO_MY_SUZERAIN', 'MRW_TT_PRESTIGE_TO_MY_LIEGE'))]"
										}
									}
								}
								using = tooltip_ws
							}
						}
					}
				}
			} # tax_levy_opinion_info
		}

		expand = {}

		vbox = {
			layoutpolicy_horizontal = expanding
			spacing = 8

			text_single = {
				background = {
					using = Background_Area_Dark
					margin = {16 8}
				}

				datacontext = "[ModifySubjectContractInteractionWindow.GetContractPreviewOpinionBreakdown]"

				visible = "[Not(SubjectContract.GetSubject.IsLocalPlayer)]"
				text = "SUBJECT_CONTRACT_OPINION_MODIFICATION"
				align = nobaseline
				using = Font_Size_Medium

				tooltip_visible = "[ValueBreakdown.HasTooltip]"

				tooltipwidget = {
					widget_value_breakdown_tooltip = {}
				}
			}

			expand = {}

			## Options
			vbox_interaction_options = {
				name = "tutorial_highlight_modify_contract_hook_button"
				visible = "[CharacterInteractionConfirmationWindow.HasOptions]"
			}


		}

		hbox_character_interaction_acceptance = {
			layoutpolicy_horizontal = expanding
		}

		hbox = {
			margin = { 16 4 }

			background = {
				using = Background_Area_Dark
			}

			hbox = {
				name = "vassal_contract_change_only_once_text"
				visible = "[ObjectsEqual( GetPlayer, SubjectContract.GetLiege )]"

				text_single = {
					visible = "[And( Not( SubjectContract.IsTributary), Or( Character.GetGovernment.IsType('feudal_government'), IsAdministrativeRuler( Character ) ) )]"
					text = "NON_FEUDAL_VASSAL_CONTRACT_OBLIGATION_ONLY_ONCE"
					align = nobaseline
				}

				text_single = {
					visible = "[SubjectContract.IsTributary]"
					text = "TRIBUTARY_CONTRACT_OBLIGATION_ONLY_ONCE"
					align = nobaseline
				}
			}

			text_single = {
				name = "province_administration_change_text"
				visible = "[IsAdministrativeRuler( Character )]"

				text = "PROVINCE_ADMINISTRATION_CHANGE_INFO"
				default_format = "#weak"
				align = nobaseline
			}
		}

		button_primary = {
			name = "send_offer_button"
			size = { 350 45 }

			text = "[CharacterInteractionConfirmationWindow.GetSendName]"
			default_format = "#high"
			enabled = "[CharacterInteractionConfirmationWindow.CanSend]"
			onclick = "[ModifySubjectContractInteractionWindow.Send]"
			tooltip = "[CharacterInteractionConfirmationWindow.GetCanSendDescription]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_advance"
		}
	}
}

types ModifyDefaultContracts
{
	type vbox_default_negotiation = vbox
	{
		vbox = {
			name = "major_line_tree_levels"
			datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelLineTrees]"
			layoutpolicy_horizontal = expanding

			spacing = 10

			item = {
				vbox = {
					visible = "[ObligationContainerData.ShouldShow( ModifySubjectContractInteractionWindow.GetContractPreview )]"

					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 10

					datacontext = "[ObligationLevelLineTree.GetContainerData]"

					background = {
						using = Background_Area_With_Header
						alpha = 0.75
					}

					text_single = {
						text = "[ObligationContainerData.GetName] [ObligationContainerData.GetIcon]"
						using = Font_Size_Medium
						default_format = "#light_background"
						margin_bottom = 5
					}

					container = {
						name = "obligation_level_item_line_area" # Name used in code do not change
						datamodel = "[ObligationLevelLineTree.AccessItems]"
						layoutpolicy_vertical = expanding

						item = {
							widget_major_obligation_level = { }
						}
					}
				}
			}
		}

		vbox_minor_obligations_radio_list = {
			name = "minor_list_levels_radio_buttons"
			datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelRadioButtons]"
			layoutpolicy_horizontal = expanding
		}

		dynamicgridbox = {
			name = "minor_list_levels_checkboxes"
			datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelCheckboxes]"

			flipdirection = yes
			datamodel_wrap = 3

			item = {
				widget_minor_obligation_checkbox_item = {
					size = { 200 70 }
				}
			}
		}

		expand = {}

		hbox_sigil_and_signatures = {
			layoutpolicy_horizontal = expanding
			spacing = 5
		}
	}
}

types ModifyVassalClanContracts
{
	type vbox_clan_negotiation = vbox
	{
		vbox =  {
			spacing = 5

			vbox_minor_obligations_radio_list = {
				name = "lambda_vassal_minor_list_levels_radio_buttons"
				datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelRadioButtons]"
				visible = "[And( Not( Character.GetPrimaryTitle.IsBarony ), Not( Character.GetPrimaryTitle.IsCounty ) )]"
				layoutpolicy_horizontal = expanding
			}

			dynamicgridbox = {
				name = "non_feudal_minor_list_levels_checkboxes"
				datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelCheckboxes]"

				flipdirection = yes
				datamodel_wrap = 3

				item = {
					widget_minor_obligation_checkbox_item = {
						size = { 200 70 }
					}
				}
			}
		}

		expand = {}

		hbox_sigil_and_signatures = {
			layoutpolicy_horizontal = expanding
			spacing = 5
		}
	}
}

types ModifyVassalAdministrativeContracts
{
	type widget_theme_type_selection_option = margin_widget {

		vbox = {
			spacing = -7

			text_label_center = {
				align = center
				max_width = 120
				text = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetName]"
			}


			button_standard_clean = {
				size = { 140 140 }

				enabled = "[ModifySubjectContractInteractionWindow.IsObligationLevelEnabled( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
				visible = "[ModifySubjectContractInteractionWindow.IsObligationLevelVisible( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

				onclick = "[ModifySubjectContractInteractionWindow.SelectObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"
				down = "[ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

				tooltip = "[ModifySubjectContractInteractionWindow.GetObligationLevelTooltipFor( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

				icon = {
					size = { 140 140 }
					texture = "[ModifySubjectContractInteractionWindowObligationLevelOption.GetIcon]"
				}

				widget = {
					size = { 100% -1 }
					parentanchor = bottom
					position = { 0 -40 }

					hbox = {
						margin = { 7 4 }
						margin_left = 15

						background = {
							visible = "[Or( ModifySubjectContractInteractionWindow.IsCurrentObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self ), ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self ) )]"

							using = Background_Area_Dark
						}

						text_single = {
							visible = "[ModifySubjectContractInteractionWindow.IsCurrentObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self )]"

							text = ADMIN_WINDOW_THEME_ADMINISTRATION_CURRENT_THEME
						}

						text_single = {
							visible = "[And( ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self ), Not( ModifySubjectContractInteractionWindow.IsCurrentObligationLevel( ModifySubjectContractInteractionWindowObligationLevelOption.Self ) ) )]"

							text = ADMIN_WINDOW_THEME_ADMINISTRATION_SELECTED_THEME
						}

						expand = {

						}

						button_radio = {
							frame = "[BoolTo1And2( ModifySubjectContractInteractionWindow.IsObligationLevelSelected( ModifySubjectContractInteractionWindowObligationLevelOption.Self ) )]"
						}
					}
				}
			}
		}
	}

	type vbox_theme_selection_item = vbox
	{
		datacontext = "[ObligationLevelRadioButtons.GetContainerData]"
		visible = "[ObligationContainerData.ShouldShow( ModifySubjectContractInteractionWindow.GetContractPreview )]"

		margin = { 30 0 }
		margin_top = 10

		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			margin_bottom = 10

			text_label_center = {
				align = center

				text = "[ObligationContainerData.GetName]"
				using = Font_Size_Medium
			}
		}

		dynamicgridbox = {
			datamodel = "[ObligationLevelRadioButtons.Access]"

			flipdirection = yes
			datamodel_wrap = 3

			item = {
				widget_theme_type_selection_option = {
					size =  { 155 180 }
				}
			}
		}
	}

	type vbox_theme_selection_list = vbox
	{
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		spacing = 5

		item = {
			vbox_theme_selection_item = { }
		}
	}

	type vbox_administrative_negotiation = vbox
	{
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			spacing = 8
			margin_top = -5
			margin_bottom = 5

			background = {
				using = Background_Area_Dark
				margin_right = 5
				margin_bottom = 17
				margin_top = -43
				margin_left = 3

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
					blend_mode = alphaMultiply
					alpha = 0.4
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/event_effect_mask.dds"
					blend_mode = alphaMultiply
					alpha = 0.7
				}
			}

			background = {
				texture = "gfx/interface/window_theme_administration/fabric_pattern.dds"

				using = Mask_Rough_Edges
				margin_top = -37
				margin_bottom = 10
				alpha = 0.9
			}

			vbox_theme_selection_list = {
				datamodel = "[ModifySubjectContractInteractionWindow.AccessObligationLevelRadioButtons]"
			}


			# OE added
			oe_admin_minor_list_levels_checkboxes = {}

			hbox = {
				margin = { 40 0 }

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				scrollbox = {
					layoutpolicy_horizontal = expanding

					background = {
						using = Background_Area
					}

					blockoverride "scrollbox_content" {
						vbox = {
							text_multi = {
								autoresize = yes
								size = { 417 78 }
								max_width = 417

								default_format = "#high"

								text = "[ModifySubjectContractInteractionWindow.GetObligationLevelDesc]"
							}
						}
					}
				}
			}

			text_multi = {
				name = "theme_administration_info"
				max_width = 440
				min_width = 440
				autoresize = yes
				margin = { 16 16 }

				text = THEME_ADMINISTRATION_INFO
			}
		}
	}
}

template FeudalVassalBackground
{
	background = {
		visible = "[Character.GetGovernment.IsType('feudal_government')]"
		texture = "gfx/interface/illustrations/event_scenes/study.dds"
		alpha = 0.7
		fittype = centercrop

		margin_bottom = 2
		using = Mask_Rough_Edges

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
			blend_mode = alphamultiply
			mirror = vertical
		}
	}
}

template NonFeudalVassalBackground
{
	background = {
		visible = "[And( Not(Character.GetGovernment.IsType('nomad_government') ), Not( Or( Character.GetGovernment.IsType('feudal_government'), IsAdministrativeRuler( Character ) ) ) )]"
		texture = "gfx/interface/illustrations/event_scenes/fp2_relaxing_room.dds"
		alpha = 0.7
		fittype = centercrop

		using = Mask_Rough_Edges

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
			blend_mode = alphamultiply
			mirror = vertical
		}
	}
}

template AdminVassalBackground
{
	background = {
		visible = "[IsAdministrativeRuler( Character )]"
		texture = "gfx/interface/illustrations/event_scenes/ep3_medi_study.dds"
		alpha = 0.7
		fittype = centercrop

		using = Mask_Rough_Edges

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
			blend_mode = alphamultiply
			mirror = vertical
		}
	}
}

template NomadVassalBackground
{
	background = {
		visible = "[Character.GetGovernment.IsType('nomad_government')]"
		texture = "gfx/interface/illustrations/event_scenes/mpo_tent_interior_mongol.dds"
		alpha = 0.6
		fittype = centercrop

		using = Mask_Rough_Edges

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
			blend_mode = alphamultiply
			mirror = vertical
		}
	}
}

types Outliner{
	type resources_top_right_bar = hbox
	{
		layer = top

		using = Animation_ShowHide_Quick

		## Resources
		hbox = {
			name = "resources"
			visible = "[Not( IsGameViewOpen('barbershop') )]"

			hbox = {
				name = "spendables"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					name = "tutorial_highlight_resources_bar"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					widget = {
						name = "gold"
						size = { 144 70 }

						widget = {
							size = { 144 45 }

							tooltipwidget = {
								widget_gold_breakdown_tooltip = {
									blockoverride "income"
									{
										datacontext = "[InGameTopbar.GetIncomeBalanceBreakdown]"
									}

									blockoverride "expenses"
									{
										datacontext = "[InGameTopbar.GetExpensesBalanceBreakdown]"
									}
								}
							}
							using = tooltip_ne
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_start.dds"
						}

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 7

									icon = {
										name = "gold_icon"
										size = { 30 30 }
										texture = "gfx/interface/icons/icon_gold.dds"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical
										ignoreinvisible = yes

										text_single = {
											name = "gold_value_positive"
											visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.GetGold, '(CFixedPoint)0')]"
											text = "[GetPlayer.GetGold|0]"
											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										text_single = {
											name = "gold_value_negative"
											visible = "[LessThan_CFixedPoint(GetPlayer.GetGold, '(CFixedPoint)0')]"
											text = "[GetPlayer.GetGold|0]"
											max_width = 50
											default_format = "#N"
											using = Font_Size_Medium
										}

										container = {
											text_single = {
												name = "balance_positive"
												visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayerBalance, '(CFixedPoint)0')]"
												text = "CURRENT_BALANCE"
												max_width = 50
												default_format = "#low"
											}

											text_single = {
												name = "balance_negative"
												visible = "[LessThan_CFixedPoint(GetPlayerBalance, '(CFixedPoint)0')]"
												text = "CURRENT_BALANCE"
												max_width = 50
												default_format = "#N"
											}
										}
									}
								}
								spacer = {
									size = { 10 1}
								}
								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}

					widget = {
						name = "prestige"
						datacontext = "[InGameTopbar.GetPrestigeItem]"

						widget = {
							size = { 112 45 }

							tooltipwidget = {
								widget_resource_value_tooltip = {}
							}
							using = tooltip_ne
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}
						size = { 112 70 }

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 7

									icon = {
										name = "prestige_icon"
										size = { 30 30 }
										texture = "[GetPlayer.GetPrestigeLevelTexture]"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical

										text_single = {
											name = "prestige_value"
											text = "[GetPlayer.GetPrestige|0]"
											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										container_resource_balance = {}
									}
								}

								expand = {}

								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}



					widget = {
						name = "piety"
						datacontext = "[InGameTopbar.GetPietyItem]"
						button = {
							size = { 112 45 }
							onclick = "[OpenGameViewData( 'faith', GetPlayer.GetFaith.GetID )]"

							using = tooltip_ne
							tooltipwidget = {
								widget_resource_value_tooltip = {}
							}
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}
						size = { 112 70 }

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 6

									icon = {
										name = "piety_icon"
										size = { 30 30 }
										texture = "[GetPlayer.GetPietyLevelTexture]"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical

										text_single = {
											name = "piety_value"
											text = "[GetPlayer.GetPiety|0]"

											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										container_resource_balance = {}
									}
								}

								expand = {}

								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}


					widget = {
						name = "provisions"
						visible = "[IsLandlessAdventurer( GetPlayer )]"
						size = { 112 70 }

						widget = {
							datacontext = "[GetPlayer.GetDomicile]"
							size = { 112 45 }

							tooltip = "[Domicile.GetProvisionsBreakdown]"
							using = tooltip_ne
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}

						vbox = {
							datacontext = "[GetPlayer.GetDomicile]"
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 7

									icon = {
										name = "provisions_icon"
										size = { 30 30 }

										framesize = { 60 60 }
										frame = 0
										texture = "gfx/interface/icons/icon_camp_supply.dds"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical
										ignoreinvisible = yes

										text_single = {
											name = "provisions_value_positive"
											visible = "[Not( Or( Domicile.IsProvisionsLow, Domicile.IsProvisionsCritical ) )]"

											text = "[Domicile.GetProvisions|0]"
											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										text_single = {
											name = "provisions_value_low"
											visible = "[Domicile.IsProvisionsLow]"

											text = "[Domicile.GetProvisions|0]"
											max_width = 50
											default_format = "#color_yellow"
											using = Font_Size_Medium
										}

										text_single = {
											name = "provisions_value_critical"
											visible = "[Domicile.IsProvisionsCritical]"

											text = "[Domicile.GetProvisions|0]"
											max_width = 50
											default_format = "#N"
											using = Font_Size_Medium
										}

										container = {
											text_single = {
												name = "provisions_max"
												text = "[Domicile.GetProvisionsMax]"
												max_width = 50
												default_format = "#low"
											}
										}
									}
								}
								expand = {}
								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 6


								vbox = {
									margin_top = -2
									layoutpolicy_vertical = expanding

									expand = {}
								}
							}
							expand = {}
						}
					}

					widget = {
						name = "influence"
						datacontext = "[InGameTopbar.GetInfluenceItem]"

						visible = "[GetPlayer.GetGovernment.HasGovernmentFlag( 'government_has_influence' )]"

						widget = {
							size = { 112 45 }

							tooltipwidget = {
								widget_resource_value_tooltip = {}
							}
							using = tooltip_ne
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}
						size = { 112 70 }

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 7

									icon = {
										name = "influence_icon"
										size = { 30 30 }
										texture = "[GetPlayer.GetInfluenceLevelTexture]"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical

										text_single = {
											name = "influence_value"
											text = "[GetPlayer.GetInfluence|0]"
											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										container_resource_balance = {}
									}
								}

								expand = {}

								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}

					widget = {
						name = "renown"
						datacontext = "[InGameTopbar.GetDynastyPrestigeItem]"
						layoutpolicy_vertical = expanding

						button = {
							size = { 112 45 }
							onclick = "[DefaultOnHouseCoatOfArmsClick(GetPlayer.GetHouse.GetID)]"

							using = tooltip_ne
							tooltipwidget = {
								widget_resource_value_tooltip = {}
							}
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}
						size = { 112 70 }

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 6

									icon = {
										visible = "[GetPlayer.IsDynast]"
										texture = "[GetPlayer.GetDynasty.GetDynastyPrestigeLevelTexture]"
										size = { 30 30 }
									}

									icon = {
										visible = "[Not(GetPlayer.IsDynast)]"
										texture = "[GetPlayer.GetDynasty.GetDynastyPrestigeLevelTexture]"
										size = { 30 30 }
										alpha = 0.3
									}

									flowcontainer = {
										visible = "[GetPlayer.IsDynast]"
										margin_bottom = 7
										spacing = -6
										direction = vertical

										text_single = {
											name = "prestige_value"
											text = "[GetPlayer.GetDynasty.GetPrestige|0]"

											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										container_resource_balance = {}
									}

									flowcontainer = {
										visible = "[Not(GetPlayer.IsDynast)]"
										margin_bottom = 7
										spacing = -6
										direction = vertical

										text_single = {
											name = "prestige_value_nodynast"
											text = "[GetPlayer.GetDynasty.GetPrestige|0]"

											max_width = 50
											default_format = "#low"
											using = Font_Size_Medium
										}

										container_resource_balance = {}
									}
								}

								expand = {}

								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}

					widget = {
						name = "herd"
						datacontext = "[GetPlayer]"
						datacontext = "[Character.GetDomicile]"
						visible = "[IsNomad( GetPlayer )]"
						size = { 112 70 }

						widget = {
							size = { 112 45 }
							using = tooltip_ne

							tooltipwidget = {
								herd_breakdown_hud_toolip = {}
							}
						}

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece.dds"
						}

						vbox = {
							margin_top = -2

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 7

									icon = {
										name = "herd_icon"
										size = { 30 30 }

										texture = "gfx/interface/icons/icon_herd.dds"
									}

									flowcontainer = {
										margin_bottom = 7
										spacing = -6
										direction = vertical
										ignoreinvisible = yes

										text_single = {
											name = "herd_value_positive"
											visible = "[Not( Domicile.IsAboveHerdLimit )]"

											text = "[Domicile.GetHerd|0]"
											max_width = 50
											default_format = "#high"
											using = Font_Size_Medium
										}

										text_single = {
											name = "above_herd_limit"
											visible = "[Domicile.IsAboveHerdLimit]"

											text = "[Domicile.GetHerd|0]"
											max_width = 50
											default_format = "#color_yellow"
											using = Font_Size_Medium
										}

										container = {
											text_single = {
												name = "army_from_herd"
												text = "[InGameTopbar.AccessHerdChangeBreakdown.GetValue|=1]"
												max_width = 50
												default_format = "#low"
											}
										}
									}
								}
								expand = {}
								divider_light = {
									layoutpolicy_vertical = expanding
									alpha = 0.8
								}
							}
							expand = {}
						}
					}
				}

				hbox = {
					name = "military"
					datacontext = "[GetPlayer]"

					widget = {
						button = {
							size = { 112 45 }
							onclick = "[ToggleGameViewData('military', GetPlayer.GetID)]"

							tooltip = "[InGameTopbar.GetMilitaryTooltip]"
							using = tooltip_ne
						}

						size = { 112 70 }

						background = {
							texture = "gfx/interface/skinned/resource_panel_piece_light.dds"
						}

						vbox = {
							margin_top = 4

							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}

								hbox = {
									spacing = 5
									icon = {
										name = "icon_soldier"
										texture = "gfx/interface/icons/icon_soldier.dds"
										size = { 25 25 }
									}

									flowcontainer = {
										direction = vertical
										datacontext = "[GetPlayerArmyComposition]"

										flowcontainer = {
											spacing = 2

											text_single = {
												name = "strength"
												text = "[InGameTopbar.GetCurrentTroopsCount]"
												default_format = "#high"
												align = nobaseline
											}

											army_quality_icon = {}
										}

										progressbar_standard = {
											name = "soldiers_max"
											size = { 40 8 }
											visible = "[NotEqualTo_int32(ArmyComposition.GetMaxNumberOfSoldiers, '(int32)0')]"

											min = 0
											max = "[IntToFloat(ArmyComposition.GetMaxNumberOfSoldiers)]"
											value = "[IntToFloat(ArmyComposition.GetCurrentNumberOfSoldiers)]"
										}
									}
								}

								expand = {}
							}

							expand = {}
						}
					}

					widget = {
						name = "domain_limit"
						visible = "[Not( IsLandlessAdventurer( GetPlayer ) )]"

						layoutpolicy_vertical = expanding

						button = {
							size = { 112 45 }
							onclick = "[ToggleGameView('my_realm')]"

							tooltip = "[Character.GetDomainLimitTooltip]"
							using = tooltip_ne
						}

						size = { 112 70 }

						background = {
							texture = "gfx/interface/skinned/resource_panel_end.dds"
						}

						vbox = {
							margin_top = 4

							hbox = {
								margin_bottom = 16

								expand = {}
								hbox = {
									margin = { 5 5 }
									spacing = 5

									background = {
										visible = "[GreaterThan_int32( Character.GetDomainSize, Character.GetDomainLimit )]"
										using = Status_Bad
										margin_bottom = -3
									}

									icon = {
										texture = "gfx/interface/icons/icon_domain.dds"
										size = { 25 25 }
									}

									text_single = {
										name = "value"
										text = "[Character.GetDomainSize]/[Character.GetDomainLimit]"
										align = nobaseline
										margin_bottom = 1
										max_width = 110
									}
								}
								expand = {}
							}
							expand = {}
						}
					}
				}
			}
		}
	}
}
